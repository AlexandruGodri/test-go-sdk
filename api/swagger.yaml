openapi: 3.0.1
info:
  title: CLOUD API
  description: "An enterprise-grade Infrastructure is provided as a Service (IaaS)\
    \ solution that can be managed through a browser-based \"Data Center Designer\"\
    \ (DCD) tool or via an easy to use API. \n\nThe API allows you to perform a variety\
    \ of management tasks such as spinning up additional servers, adding volumes,\
    \ adjusting networking, and so forth. It is designed to allow users to leverage\
    \ the same power and flexibility found within the DCD visual tool. Both tools\
    \ are consistent with their concepts and lend well to making the experience smooth\
    \ and intuitive."
  version: "5.0"
servers:
- url: https://api.ionos.com/cloudapi/v5
tags:
- name: Server
- name: Contract
- name: Data Center
- name: Nic
- name: User Management
- name: Image
- name: IP Blocks
- name: Lan
- name: Load Balancer
- name: Location
- name: Private Cross Connect
- name: Request
- name: /
- name: Snapshot
- name: Volume
- name: Backup Unit
- name: Label
- name: Kubernetes
paths:
  /datacenters/{datacenterId}/servers/{serverId}/volumes:
    get:
      tags:
      - Server
      summary: List Attached Volumes
      description: You can retrieve a list of volumes attached to the server
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachedVolumes'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
    post:
      tags:
      - Server
      summary: Attach a volume
      description: This will attach a pre-existing storage volume to the server. It
        is also possible to create and attach a volume in one step just by providing
        a new volume description as payload. Combine count of Nics and volumes attached
        to the server should not exceed size 24.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Volume to be attached (created and attached)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      x-codegen-request-body-name: volume
  /datacenters/{datacenterId}/servers/{serverId}/volumes/{volumeId}:
    get:
      tags:
      - Server
      summary: Retrieve an attached volume
      description: This will retrieve the properties of an attached volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    delete:
      tags:
      - Server
      summary: Detach a volume
      description: This will detach the volume from the server. This will not delete
        the volume from your datacenter. You will need to make a separate request
        to perform a deletion
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/cdroms/{cdromId}:
    get:
      tags:
      - Server
      summary: Retrieve an attached CD-ROM
      description: You can retrieve a specific CD-ROM attached to the server
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: cdromId
        in: path
        description: The unique ID of the CD-ROM
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    delete:
      tags:
      - Server
      summary: Detach a CD-ROM
      description: This will detach a CD-ROM from the server
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: cdromId
        in: path
        description: The unique ID of the CD-ROM
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/cdroms:
    get:
      tags:
      - Server
      summary: 'List attached CD-ROMs '
      description: You can retrieve a list of CD-ROMs attached to the server.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cdroms'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Server
      summary: Attach a CD-ROM
      description: 'You can attach a CD-ROM to an existing server. You can attach
        up to 2 CD-ROMs to one server. '
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: CD-ROM to be attached
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: cdrom
  /contracts:
    get:
      tags:
      - Contract
      summary: Retrieve a Contract
      description: Retrieves the attributes of user's contract.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters:
    get:
      tags:
      - Data Center
      summary: List Data Centers under your account
      description: You can retrieve a complete list of data centers provisioned under
        your account
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datacenters'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Data Center
      summary: Create a Data Center
      description: Virtual data centers are the foundation of the platform. They act
        as logical containers for all other objects you will be creating, e.g. servers.
        You can provision as many data centers as you want. Datacenters have their
        own private network and are logically segmented from each other to create
        isolation. You can use this POST method to create a simple datacenter or to
        create a datacenter with multiple objects under it such as servers and storage
        volumes.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Datacenter to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datacenter'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datacenter'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: datacenter
  /datacenters/{datacenterId}:
    get:
      tags:
      - Data Center
      summary: Retrieve a Data Center
      description: You can retrieve a data center by using the resource's ID. This
        value can be found in the response body when a datacenter is created or when
        you GET a list of datacenters.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datacenter'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Data Center
      summary: Modify a Data Center
      description: You can use update datacenter to re-name the datacenter or update
        its description
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Data Center
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datacenter'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datacenter'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: datacenter
    delete:
      tags:
      - Data Center
      summary: Delete a Data Center
      description: Will remove all objects within the datacenter and remove the datacenter
        object itself, too. This is a highly destructive method which should be used
        with caution
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Data Center
      summary: Partially modify a Data Center
      description: You can use update datacenter to re-name the datacenter or update
        its description
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of Data Center
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatacenterProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datacenter'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: datacenter
  /datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules:
    get:
      tags:
      - Nic
      summary: 'List Firewall Rules '
      description: Retrieves a list of firewall rules associated with a particular
        NIC
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRules'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Nic
      summary: Create a Firewall Rule
      description: This will add a Firewall Rule to the NIC
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Firewall Rule to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: firewallrule
  /datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules/{firewallruleId}:
    get:
      tags:
      - Nic
      summary: Retrieve a Firewall Rule
      description: Retrieves the attributes of a given Firewall Rule.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: firewallruleId
        in: path
        description: The unique ID of the Firewall Rule
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Nic
      summary: Modify a Firewall Rule
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: firewallruleId
        in: path
        description: The unique ID of the Firewall Rule
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Firewall Rule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: firewallrule
    delete:
      tags:
      - Nic
      summary: Delete a Firewall Rule
      description: Removes the specific Firewall Rule
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: firewallruleId
        in: path
        description: The unique ID of the Firewall Rule
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Nic
      summary: Partially modify a Firewall Rule
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: firewallruleId
        in: path
        description: The unique ID of the Firewall Rule
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Firewall Rule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallruleProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: firewallrule
  /um/groups:
    get:
      tags:
      - User Management
      summary: List All Groups.
      description: You can retrieve a complete list of all groups that you have access
        to
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - User Management
      summary: Create a Group
      description: You can use this POST method to create a group
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Group to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: group
  /um/groups/{groupId}:
    get:
      tags:
      - User Management
      summary: Retrieve a Group
      description: You can retrieve a group by using the group ID. This value can
        be found in the response body when a group is created or when you GET a list
        of groups.
      parameters:
      - name: groupId
        in: path
        description: The unique ID of the group
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - User Management
      summary: Modify a group
      description: You can use this method to update properties of the group.
      parameters:
      - name: groupId
        in: path
        description: The unique ID of the group
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of the Group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Group
    delete:
      tags:
      - User Management
      summary: Delete a Group
      description: Delete a group
      parameters:
      - name: groupId
        in: path
        description: The unique ID of the group
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/groups/{groupId}/resources:
    get:
      tags:
      - User Management
      summary: Retrieve resources assigned to a group
      parameters:
      - name: groupId
        in: path
        description: The unique ID of the group
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroups'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/groups/{groupId}/users:
    get:
      tags:
      - User Management
      summary: 'List Group Members '
      description: You can retrieve a list of users who are members of the group
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembers'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - User Management
      summary: Add a user to a group
      description: 'This will attach a pre-existing user to a group. '
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: User to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: user
  /um/groups/{groupId}/users/{userId}:
    delete:
      tags:
      - User Management
      summary: Remove a user from a group
      description: This will remove a user from a group
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/groups/{groupId}/shares/{resourceId}:
    get:
      tags:
      - User Management
      summary: Retrieve a group share
      description: This will retrieve the properties of a group share.
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShare'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - User Management
      summary: Modify resource permissions of a group
      description: You can use update resource permissions of a group. If empty body
        will be provided, no updates will happen, instead you will be returned the
        current permissions of resource in a group. In this case response code will
        be 200
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupShare'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShare'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: resource
    post:
      tags:
      - User Management
      summary: Add a resource to a group
      description: 'This will add a resource to the group. '
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Resource to be added
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GroupShare'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShare'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: resource
    delete:
      tags:
      - User Management
      summary: Remove a resource from a group
      description: This will remove a resource from a group
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/groups/{groupId}/shares:
    get:
      tags:
      - User Management
      summary: 'List Group Shares '
      description: You can retrieve a list of all resources along with their permissions
        of the group
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShares'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /images:
    get:
      tags:
      - Image
      summary: 'List Images '
      description: Retrieve a list of images within the datacenter
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /images/{imageId}:
    get:
      tags:
      - Image
      summary: Retrieve an Image
      description: Retrieves the attributes of a given image.
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Image
      summary: Modify an Image
      description: You can use update attributes of a resource
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: image
    delete:
      tags:
      - Image
      summary: Delete an Image
      description: Deletes the specified image. This operation is permitted on private
        image only.
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Image
      summary: Partially modify an Image
      description: You can use update attributes of a resource
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Image
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: image
  /ipblocks:
    get:
      tags:
      - IP Blocks
      summary: 'List IP Blocks '
      description: Retrieve a list of all reserved IP Blocks
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlocks'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - IP Blocks
      summary: Reserve IP Block
      description: This will reserve a new IP Block
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: IP Block to be reserved
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpBlock'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: ipblock
  /ipblocks/{ipblockId}:
    get:
      tags:
      - IP Blocks
      summary: Retrieve an IP Block
      description: Retrieves the attributes of a given IP Block.
      parameters:
      - name: ipblockId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - IP Blocks
      summary: Modify IP Block
      description: You can use update attributes of a resource
      parameters:
      - name: ipblockId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: IP Block to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpBlock'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: ipblock
    delete:
      tags:
      - IP Blocks
      summary: Delete IP Block
      description: Removes the specific IP Block
      parameters:
      - name: ipblockId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - IP Blocks
      summary: Partially modify IP Block
      description: You can use update attributes of a resource
      parameters:
      - name: ipblockId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: IP Block to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpBlockProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpBlock'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: ipblock
  /datacenters/{datacenterId}/lans:
    get:
      tags:
      - Lan
      summary: List Lans
      description: Retrieve a list of LANs within the datacenter
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lans'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Lan
      summary: Create a Lan
      description: Creates a LAN within the datacenter
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Lan to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanPost'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanPost'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: lan
  /datacenters/{datacenterId}/lans/{lanId}:
    get:
      tags:
      - Lan
      summary: Retrieve a Lan
      description: Retrieves the attributes of a given LAN
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lan'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Lan
      summary: Modify a Lan
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Lan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lan'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lan'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: lan
    delete:
      tags:
      - Lan
      summary: Delete a Lan.
      description: Removes the specific Lan
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Lan
      summary: Partially modify a Lan
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Lan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lan'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: lan
  /datacenters/{datacenterId}/lans/{lanId}/nics:
    get:
      tags:
      - Lan
      summary: 'List Lan Members '
      description: You can retrieve a list of nics attached to a lan
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanNics'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Lan
      summary: Attach a nic
      description: 'This will attach a pre-existing nic to a lan. '
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Nic to be attached
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nic'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: nic
  /datacenters/{datacenterId}/lans/{lanId}/nics/{nicId}:
    get:
      tags:
      - Lan
      summary: Retrieve a nic attached to lan
      description: This will retrieve the properties of an attached nic.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: lanId
        in: path
        description: The unique ID of the LAN
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/loadbalancers:
    get:
      tags:
      - Load Balancer
      summary: List Load Balancers
      description: Retrieve a list of Load Balancers within the datacenter
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loadbalancers'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Load Balancer
      summary: Create a Load Balancer
      description: Creates a Loadbalancer within the datacenter
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Loadbalancer to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loadbalancer'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loadbalancer'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: loadbalancer
  /datacenters/{datacenterId}/loadbalancers/{loadbalancerId}:
    get:
      tags:
      - Load Balancer
      summary: Retrieve a loadbalancer
      description: Retrieves the attributes of a given Loadbalancer
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loadbalancer'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Load Balancer
      summary: Modify a Load Balancer
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Loadbalancer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loadbalancer'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loadbalancer'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Loadbalancer
    delete:
      tags:
      - Load Balancer
      summary: Delete a Loadbalancer.
      description: Removes the specific Loadbalancer
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Load Balancer
      summary: Partially modify a Loadbalancer
      description: You can use update attributes of a resource
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Loadbalancer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadbalancerProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loadbalancer'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Loadbalancer
  /datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics:
    get:
      tags:
      - Load Balancer
      summary: 'List Load Balancer Members '
      description: You can retrieve a list of nics attached to a Load Balancer
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalancedNics'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Load Balancer
      summary: Attach a nic to Load Balancer
      description: 'This will attach a pre-existing nic to a Load Balancer. '
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Nic id to be attached
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nic'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: nic
  /datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics/{nicId}:
    get:
      tags:
      - Load Balancer
      summary: Retrieve a nic attached to Load Balancer
      description: This will retrieve the properties of an attached nic.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    delete:
      tags:
      - Load Balancer
      summary: Detach a nic from loadbalancer
      description: This will remove a nic from Load Balancer
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: loadbalancerId
        in: path
        description: The unique ID of the Load Balancer
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /locations:
    get:
      tags:
      - Location
      summary: List Locations
      description: Retrieve a list of Locations. This list represents where you can
        provision your virtual data centers
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /locations/{regionId}:
    get:
      tags:
      - Location
      summary: List Locations within a region
      description: Retrieve a list of Locations within a world's region
      parameters:
      - name: regionId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /locations/{regionId}/{locationId}:
    get:
      tags:
      - Location
      summary: Retrieve a Location
      description: Retrieves the attributes of a given location
      parameters:
      - name: regionId
        in: path
        required: true
        schema:
          type: string
      - name: locationId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/nics:
    get:
      tags:
      - Nic
      summary: 'List Nics '
      description: Retrieves a list of NICs.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nics'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Nic
      summary: Create a Nic
      description: Adds a NIC to the target server. Combine count of Nics and volumes
        attached to the server should not exceed size 24.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Nic to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nic'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: nic
  /datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}:
    get:
      tags:
      - Nic
      summary: Retrieve a Nic
      description: Retrieves the attributes of a given NIC
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Nic
      summary: Modify a Nic
      description: You can use update attributes of a Nic
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Nic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nic'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Nic
    delete:
      tags:
      - Nic
      summary: Delete a Nic
      description: Deletes the specified NIC.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Nic
      summary: Partially modify a Nic
      description: You can use update attributes of a Nic
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: nicId
        in: path
        description: The unique ID of the NIC
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of Nic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NicProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nic'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Nic
  /pccs:
    get:
      tags:
      - Private Cross Connect
      summary: 'List Private Cross-Connects '
      description: You can retrieve a complete list of private cross-connects provisioned
        under your account
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCrossConnects'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Private Cross Connect
      summary: Create a Private Cross-Connect
      description: You can use this POST method to create a private cross-connect
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Private Cross-Connect to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCrossConnect'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCrossConnect'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: pcc
  /pccs/{pccId}:
    get:
      tags:
      - Private Cross Connect
      summary: Retrieve a Private Cross-Connect
      description: You can retrieve a private cross-connect by using the resource's
        ID. This value can be found in the response body when a private cross-connect
        is created or when you GET a list of private cross-connects.
      parameters:
      - name: pccId
        in: path
        description: The unique ID of the private cross-connect
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCrossConnect'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    delete:
      tags:
      - Private Cross Connect
      summary: Delete a Private Cross-Connect
      description: Delete a private cross-connect if no datacenters are joined to
        the given PCC
      parameters:
      - name: pccId
        in: path
        description: The unique ID of the private cross-connect
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Private Cross Connect
      summary: Partially modify a private cross-connect
      description: You can use update private cross-connect to re-name or update its
        description
      parameters:
      - name: pccId
        in: path
        description: The unique ID of the private cross-connect
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of private cross-connect
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCrossConnectProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCrossConnect'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: pcc
  /requests/{requestId}/status:
    get:
      tags:
      - Request
      summary: Retrieve Request Status
      description: Retrieves the status of a given request.
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /requests/{requestId}:
    get:
      tags:
      - Request
      summary: Retrieve a Request
      description: Retrieves the attributes of a given request.
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /requests:
    get:
      tags:
      - Request
      summary: List Requests
      description: Retrieve a list of API requests.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      - name: filter.status
        in: query
        description: Request status filter to fetch all the request based on a particular
          status [QUEUED, RUNNING, DONE, FAILED]
        schema:
          type: string
      - name: filter.createdAfter
        in: query
        description: Filter all the requests after the created date
        schema:
          type: string
      - name: filter.createdBefore
        in: query
        description: Filter all the requests before the created date
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Requests'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/resources/{resourceType}/{resourceId}:
    get:
      tags:
      - User Management
      summary: Retrieve a Resource by type.
      description: You can retrieve a resource by using the type and its uuid. Allowed
        values for types are { datacenter, snapshot, image, ipblock, pcc, backupunit,
        k8s }. The value of resource type can also be found in the response body when
        you GET a list of all resources.
      parameters:
      - name: resourceType
        in: path
        description: The resource Type
        required: true
        schema:
          type: string
      - name: resourceId
        in: path
        description: The resource Uuid
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/resources/{resourceType}:
    get:
      tags:
      - User Management
      summary: Retrieve a list of Resources by type.
      description: You can retrieve a list of resources by using the type. Allowed
        values are { datacenter, snapshot, image, ipblock, pcc, backupunit, k8s }.
        This value of resource type also be found in the response body when you GET
        a list of all resources.
      parameters:
      - name: resourceType
        in: path
        description: The resource Type
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/resources:
    get:
      tags:
      - User Management
      summary: List All Resources.
      description: You can retrieve a complete list of all resources that you have
        access to
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /:
    get:
      tags:
      - /
      summary: Display API information
      description: Display API information
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /datacenters/{datacenterId}/servers:
    get:
      tags:
      - Server
      summary: 'List Servers '
      description: You can retrieve a list of servers within a datacenter
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: upgradeNeeded
        in: query
        description: It can be used to filter which servers can be upgraded which
          can not be upgraded.
        schema:
          type: boolean
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servers'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Server
      summary: Create a Server
      description: Creates a server within an existing datacenter. You can configure
        the boot volume and connect the server to an existing LAN.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Server to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: server
  /datacenters/{datacenterId}/servers/{serverId}:
    get:
      tags:
      - Server
      summary: Retrieve a Server
      description: Returns information about a server such as its configuration, provisioning
        status, etc.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Server
      summary: Modify a Server
      description: Allows to modify the attributes of a Server. From v5 onwards 'allowReboot'
        attribute will no longer be available. For certain server property change
        it was earlier forced to be provided. Now this behaviour is implicit and backend
        will do this automatically e.g. in earlier versions, when CPU family changes,
        the 'allowReboot' property was required to be set to true which will no longer
        be the case and the server will be rebooted automatically
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Server
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: server
    delete:
      tags:
      - Server
      summary: Delete a Server
      description: This will remove a server from your datacenter; however, it will
        not remove the storage volumes attached to the server. You will need to make
        a separate API call to perform that action
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Server
      summary: Partially modify a Server
      description: You can use update attributes of a server
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of Server
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: server
  /datacenters/{datacenterId}/servers/{serverId}/reboot:
    post:
      tags:
      - Server
      summary: Reboot a Server
      description: This will force a hard reboot of the server. Do not use this method
        if you want to gracefully reboot the machine. This is the equivalent of powering
        off the machine and turning it back on.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/start:
    post:
      tags:
      - Server
      summary: Start a Server
      description: This will start a server. If the server's public IP was deallocated
        then a new IP will be assigned
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/stop:
    post:
      tags:
      - Server
      summary: Stop a Server
      description: This will stop a server. The machine will be forcefully powered
        off, billing will cease, and the public IP, if one is allocated, will be deallocated.
        The operation is not supported for CoreVPS servers.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/upgrade:
    post:
      tags:
      - Server
      summary: Upgrade a Server
      description: This will upgrade the version of the server, if needed. To verify
        if there is an upgrade available for a server, call '/datacenters/{datacenterId}/servers?upgradeNeeded=true'
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /snapshots:
    get:
      tags:
      - Snapshot
      summary: 'List Snapshots '
      description: Retrieve a list of available snapshots.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshots'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /snapshots/{snapshotId}:
    get:
      tags:
      - Snapshot
      summary: Retrieve a Snapshot by its uuid.
      description: Retrieves the attributes of a given Snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Snapshot
      summary: Modify a Snapshot
      description: You can use update attributes of a resource
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Snapshot
    delete:
      tags:
      - Snapshot
      summary: Delete a Snapshot
      description: Deletes the specified Snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Snapshot
      summary: Partially modify a Snapshot
      description: You can use this method to update attributes of a Snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Snapshot
  /um/users:
    get:
      tags:
      - User Management
      summary: 'List all Users '
      description: You can retrieve a complete list of users under your account
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - User Management
      summary: Create a user
      description: You can use this POST method to create a user
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: User to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: user
  /um/users/{userId}:
    get:
      tags:
      - User Management
      summary: Retrieve a User
      description: You can retrieve user details by using the users ID. This value
        can be found in the response body when a user is created or when you GET a
        list of users.
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - User Management
      summary: Modify a user
      description: You can use update attributes of a User
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: User
    delete:
      tags:
      - User Management
      summary: Delete a User
      description: Delete a user
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/users/{userId}/groups:
    get:
      tags:
      - User Management
      summary: Retrieve a User's group resources
      description: You can retrieve group resources of user by using the users ID.
        This value can be found in the response body when a user is created or when
        you GET a list of users.
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroups'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/users/{userId}/owns:
    get:
      tags:
      - User Management
      summary: Retrieve a User's own resources
      description: You can retrieve resources owned by using the users ID. This value
        can be found in the response body when a user is created or when you GET a
        list of users.
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesUsers'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/users/{userId}/s3keys:
    get:
      tags:
      - User Management
      summary: Retrieve a User's S3 keys
      description: You can retrieve S3 keys owned by a user by using the users ID.
        This user Id can be found in the response body when a user is created or when
        you GET a list of users.
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Keys'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - User Management
      summary: Create a S3 key for the given user
      description: Creates a S3 key for the given user. This user Id can be found
        in the response body when a user is created or when you GET a list of users.
        Maximum of 5 keys can be generated for a given user
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Key'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/users/{userId}/s3keys/{keyId}:
    get:
      tags:
      - User Management
      summary: Retrieve given S3 key belonging to the given User
      description: You can retrieve S3 key belonging to the given User. This user
        Id can be found in the response body when a user is created or when you GET
        a list of users. The key Id can be found in the response body when a S3 key
        is created or when you GET a list of all S3 keys of a user
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: keyId
        in: path
        description: The unique access key ID of the S3 key
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Key'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - User Management
      summary: Modify a S3 key having the given key id
      description: You can enable or disable a given S3 key
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: keyId
        in: path
        description: The unique access key ID of the S3 key
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Key'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Key'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: User
    delete:
      tags:
      - User Management
      summary: Delete a S3 key
      description: Delete a S3 key
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: keyId
        in: path
        description: The unique access key ID of the S3 key
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /um/users/{userId}/s3ssourl:
    get:
      tags:
      - User Management
      summary: Retrieve S3 object storage single signon URL for the given user
      description: You can retrieve S3 object storage single signon URL for the given
        user. This user Id can be found in the response body when a user is created
        or when you GET a list of users.
      parameters:
      - name: userId
        in: path
        description: The unique ID of the user
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3ObjectStorageSSO'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/volumes:
    get:
      tags:
      - Volume
      summary: 'List Volumes '
      description: Retrieves a list of Volumes.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Volume
      summary: Create a Volume
      description: Creates a volume within the datacenter. This will not attach the
        volume to a server. Please see the Servers section for details on how to attach
        storage volumes
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Volume to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Volume
  /datacenters/{datacenterId}/volumes/{volumeId}:
    get:
      tags:
      - Volume
      summary: Retrieve a Volume
      description: Retrieves the attributes of a given Volume
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Volume
      summary: Modify a Volume
      description: You can use update attributes of a Volume
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Volume
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Volume
    delete:
      tags:
      - Volume
      summary: Delete a Volume
      description: Deletes the specified volume. This will result in the volume being
        removed from your datacenter. Use this with caution.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Volume
      summary: Partially modify a Volume
      description: You can use update attributes of a Volume
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified properties of Volume
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: Volume
  /datacenters/{datacenterId}/volumes/{volumeId}/restore-snapshot:
    post:
      tags:
      - Volume
      summary: Restore Volume Snapshot
      description: This will restore a snapshot onto a volume. A snapshot is created
        as just another image that can be used to create subsequent volumes if you
        want or to restore an existing volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: This is the ID of the snapshot
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/volumes/{volumeId}/create-snapshot:
    post:
      tags:
      - Volume
      summary: Create Volume Snapshot
      description: Creates a snapshot of a volume within the datacenter. You can use
        a snapshot to create a new storage volume or to restore a storage volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: The name of the snapshot
                description:
                  type: string
                  description: The description of the snapshot
                secAuthProtection:
                  type: boolean
                  description: Flag representing if extra protection is enabled on
                    snapshot e.g. Two Factor protection etc.
                licenceType:
                  type: string
                  description: The OS type of this Snapshot
                  enum:
                  - UNKNOWN
                  - WINDOWS
                  - WINDOWS2016
                  - LINUX
                  - OTHER
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /backupunits:
    get:
      tags:
      - Backup Unit
      summary: 'List Backup Units '
      description: You can retrieve a complete list of backup Units that you have
        access to.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnits'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Backup Unit
      summary: Create a Backup Unit
      description: 'Create a Backup Unit. A Backup Unit is considered a resource like
        a virtual datacenter, IP Block, snapshot, etc. It shall be shareable via groups
        inside our User Management Feature '
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Payload containing data to create a new Backup Unit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupUnit'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnit'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: backupUnit
  /backupunits/{backupunitId}:
    get:
      tags:
      - Backup Unit
      summary: Returns the specified backup Unit
      description: You can retrieve the details of an specific backup unit.
      parameters:
      - name: backupunitId
        in: path
        description: The unique ID of the backup unit
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnit'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Backup Unit
      summary: Modify a Backup Unit
      description: You can use update a backup Unit properties
      parameters:
      - name: backupunitId
        in: path
        description: The unique ID of the backup unit
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified backup Unit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupUnit'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnit'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: backup Unit
    delete:
      tags:
      - Backup Unit
      summary: Delete a Backup Unit
      description: 'NOTE: Running through the deletion process will delete: - the
        backup plans inside the Backup Unit. - all backups associated with the Backup
        Unit. - the backup user and finally also the unit'
      parameters:
      - name: backupunitId
        in: path
        description: The unique ID of the backup Unit
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    patch:
      tags:
      - Backup Unit
      summary: Partially modify a Backup Unit
      description: You can use update a backup Unit properties
      parameters:
      - name: backupunitId
        in: path
        description: The unique ID of the backup unit
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified backup Unit properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupUnitProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
            Location:
              description: Callback URL to poll async operation status
              schema:
                pattern: https://[apiBaseUri]/requests/[requestId]/status
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnit'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: backup Unit properties
  /backupunits/{backupunitId}/ssourl:
    get:
      tags:
      - Backup Unit
      summary: Returns a single signon URL for the specified backup Unit.
      description: Returns a single signon URL for the specified backup Unit.
      parameters:
      - name: backupunitId
        in: path
        description: The unique UUID of the backup unit
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUnitSSO'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /labels:
    get:
      tags:
      - Label
      summary: 'List Labels '
      description: You can retrieve a complete list of labels that you have access
        to.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /labels/{labelurn}:
    get:
      tags:
      - Label
      summary: Returns the label by its URN.
      description: You can retrieve the details of a specific label using its URN.
        A URN is for uniqueness of a Label and composed using urn:label:<resource_type>:<resource_uuid>:<key>
      parameters:
      - name: labelurn
        in: path
        description: The URN representing the unique ID of the label. A URN is for
          uniqueness of a Label and composed using urn:label:<resource_type>:<resource_uuid>:<key>
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/labels:
    get:
      tags:
      - Label
      summary: List all Data Center Labels
      description: You can retrieve a list of all labels associated with a data center
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Data Center
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Label
      summary: Add a Label to Data Center
      description: This will add a label to the data center.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Data Center
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Label to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
  /datacenters/{datacenterId}/labels/{key}:
    get:
      tags:
      - Label
      summary: Retrieve a Label of Data Center
      description: This will retrieve the properties of a associated label to a data
        center.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Data Center
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Label
      summary: Modify a Label of Data Center
      description: This will modify the value of the label on a data center.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Data Center
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Label
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
    delete:
      tags:
      - Label
      summary: Delete a Label from Data Center
      description: This will remove a label from the data center.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Data Center
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/servers/{serverId}/labels:
    get:
      tags:
      - Label
      summary: List all Server Labels
      description: You can retrieve a list of all labels associated with a server
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Label
      summary: Add a Label to Server
      description: This will add a label to the server.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Label to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
  /datacenters/{datacenterId}/servers/{serverId}/labels/{key}:
    get:
      tags:
      - Label
      summary: Retrieve a Label of Server
      description: This will retrieve the properties of a associated label to a server.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Label
      summary: Modify a Label of Server
      description: This will modify the value of the label on a server.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Label
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
    delete:
      tags:
      - Label
      summary: Delete a Label from Server
      description: This will remove a label from the server.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: serverId
        in: path
        description: The unique ID of the Server
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /datacenters/{datacenterId}/volumes/{volumeId}/labels:
    get:
      tags:
      - Label
      summary: List all Volume Labels
      description: You can retrieve a list of all labels associated with a volume
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Label
      summary: Add a Label to Volume
      description: This will add a label to the volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Label to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
  /datacenters/{datacenterId}/volumes/{volumeId}/labels/{key}:
    get:
      tags:
      - Label
      summary: Retrieve a Label of Volume
      description: This will retrieve the properties of a associated label to a volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Label
      summary: Modify a Label of Volume
      description: This will modify the value of the label on a volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Label
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
    delete:
      tags:
      - Label
      summary: Delete a Label from Volume
      description: This will remove a label from the volume.
      parameters:
      - name: datacenterId
        in: path
        description: The unique ID of the Datacenter
        required: true
        schema:
          type: string
      - name: volumeId
        in: path
        description: The unique ID of the Volume
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /snapshots/{snapshotId}/labels:
    get:
      tags:
      - Label
      summary: List all Snapshot Labels
      description: You can retrieve a list of all labels associated with a snapshot
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Label
      summary: Add a Label to Snapshot
      description: This will add a label to the snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Label to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
  /snapshots/{snapshotId}/labels/{key}:
    get:
      tags:
      - Label
      summary: Retrieve a Label of Snapshot
      description: This will retrieve the properties of a associated label to a snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Label
      summary: Modify a Label of Snapshot
      description: This will modify the value of the label on a snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Label
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
    delete:
      tags:
      - Label
      summary: Delete a Label from Snapshot
      description: This will remove a label from the snapshot.
      parameters:
      - name: snapshotId
        in: path
        description: The unique ID of the Snapshot
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /ipblocks/{ipblockId}/labels:
    get:
      tags:
      - Label
      summary: List all Ip Block Labels
      description: You can retrieve a list of all labels associated with a IP Block
      parameters:
      - name: ipblockId
        in: path
        description: The unique ID of the Ip Block
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResources'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Label
      summary: Add a Label to IP Block
      description: This will add a label to the Ip Block.
      parameters:
      - name: ipblockId
        in: path
        description: The unique ID of the Ip Block
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Label to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "201":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
  /ipblocks/{ipblockId}/labels/{key}:
    get:
      tags:
      - Label
      summary: Retrieve a Label of IP Block
      description: This will retrieve the properties of a associated label to a Ip
        Block.
      parameters:
      - name: ipblockId
        in: path
        description: The unique ID of the Ip Block
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Label
      summary: Modify a Label of IP Block
      description: This will modify the value of the label on a Ip Block.
      parameters:
      - name: ipblockId
        in: path
        description: The unique ID of the Ip Block
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Modified Label
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: label
    delete:
      tags:
      - Label
      summary: Delete a Label from IP Block
      description: This will remove a label from the Ip Block.
      parameters:
      - name: ipblockId
        in: path
        description: The unique ID of the Ip Block
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key of the Label
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s:
    get:
      tags:
      - Kubernetes
      summary: List Kubernetes Clusters
      description: You can retrieve a list of all kubernetes clusters associated with
        a contract
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusters'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Kubernetes
      summary: Create Kubernetes Cluster
      description: This will create a new Kubernetes Cluster.
      parameters:
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Properties of the Kubernetes Cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesClusterProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: kubernetesClusterProperties
  /k8s/{k8sClusterId}:
    get:
      tags:
      - Kubernetes
      summary: Retrieve Kubernetes Cluster
      description: This will retrieve a single Kubernetes Cluster.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Kubernetes
      summary: Modify Kubernetes Cluster
      description: This will modify the Kubernetes Cluster.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Details of of the Kubernetes Cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCluster'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: kubernetescluster
    delete:
      tags:
      - Kubernetes
      summary: Delete Kubernetes Cluster
      description: This will remove a Kubernetes Cluster.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/{k8sClusterId}/kubeconfig:
    get:
      tags:
      - Kubernetes
      summary: Retrieve Kubernetes Configuration File
      description: You can retrieve kubernetes configuration file for the kubernetes
        cluster.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesConfig'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/{k8sClusterId}/nodepools:
    get:
      tags:
      - Kubernetes
      summary: List Kubernetes Node Pools
      description: You can retrieve a list of all kubernetes node pools part of kubernetes
        cluster
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNodePools'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    post:
      tags:
      - Kubernetes
      summary: Create a Kubernetes Node Pool
      description: This will create a new Kubernetes Node Pool inside a Kubernetes
        Cluster.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Properties of Kubernetes Node Pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesNodePoolProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNodePool'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: KubernetesNodePoolProperties
  /k8s/{k8sClusterId}/nodepools/{nodepoolId}:
    get:
      tags:
      - Kubernetes
      summary: Retrieve Kubernetes Node Pool
      description: You can retrieve a single Kubernetes Node Pool.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNodePool'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
    put:
      tags:
      - Kubernetes
      summary: Modify Kubernetes Node Pool
      description: This will modify the Kubernetes Node Pool.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      requestBody:
        description: Details of the Kubernetes Node Pool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesNodePoolProperties'
        required: true
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNodePool'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
      x-codegen-request-body-name: KubernetesNodePoolProperties
    delete:
      tags:
      - Kubernetes
      summary: Delete Kubernetes Node Pool
      description: This will remove a Kubernetes Node Pool.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes:
    get:
      tags:
      - Kubernetes
      summary: Retrieve Kubernetes nodes.
      description: You can retrieve all nodes of Kubernetes Node Pool.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNodes'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}:
    get:
      tags:
      - Kubernetes
      summary: Retrieve Kubernetes node
      description: You can retrieve a single Kubernetes Node.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: nodeId
        in: path
        description: The unique ID of the Kubernetes Node.
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesNode'
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}/replace:
    post:
      tags:
      - Kubernetes
      summary: Recreate the Kubernetes node
      description: |-
        You can recreate a single Kubernetes Node.

        Managed Kubernetes starts a process which based on the nodepool's template creates & configures a new node, waits for status "ACTIVE", and migrates all the pods from the faulty node, deleting it once empty. While this operation occurs, the nodepool will have an extra billable "ACTIVE" node.
      parameters:
      - name: k8sClusterId
        in: path
        description: The unique ID of the Kubernetes Cluster
        required: true
        schema:
          type: string
      - name: nodepoolId
        in: path
        description: The unique ID of the Kubernetes Node Pool
        required: true
        schema:
          type: string
      - name: nodeId
        in: path
        description: The unique ID of the Kubernetes Node.
        required: true
        schema:
          type: string
      - name: pretty
        in: query
        description: Controls whether response is pretty-printed (with indentation
          and new lines)
        schema:
          type: boolean
          default: true
      - name: depth
        in: query
        description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
          \t- depth=0: only direct properties are included. Children (servers etc.)\
          \ are not included\n\t- depth=1: direct properties and children references\
          \ are included\n\t- depth=2: direct properties and children properties are\
          \ included\n\t- depth=3: direct properties and children properties and children's\
          \ children are included\n\t- depth=... and so on"
        schema:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: X-Contract-Number
        in: header
        description: Users having more than 1 contract need to provide contract number,
          against which all API requests should be executed
        schema:
          type: integer
          format: int32
      responses:
        "202":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
            402 (trial access), 403 (insufficient permissions), 404 (not found), 405
            (unsupported HTTP method), 415 (unsupported content type, 422 (validation
            error), 429 (request rate limit exceeded), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/versions:
    get:
      tags:
      - Kubernetes
      summary: Retrieve available Kubernetes versions
      description: You can retrieve a list of available kubernetes versions
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 401 (auth error), 404 (not found),
            405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation
            error), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/versions/default:
    get:
      tags:
      - Kubernetes
      summary: Retrieve the current default kubernetes version for clusters and nodepools.
      description: You can retrieve the current default kubernetes version for clusters
        and nodepools.
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 401 (auth error), 404 (not found),
            405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation
            error), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
  /k8s/versions/{clusterVersion}/compatibilities:
    get:
      tags:
      - Kubernetes
      summary: Retrieves a list of available kubernetes versions for nodepools depending
        on the given kubernetes version running in the cluster.
      description: You can retrieve a list of available kubernetes versions for nodepools
        depending on the given kubernetes version running in the cluster.
      parameters:
      - name: clusterVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-RateLimit-Remaining:
              description: 'Number of requests which can still be made without triggering
                a failure response. '
              schema:
                type: integer
                format: int32
            X-RateLimit-Limit:
              description: Average number of requests allowed per minute
              schema:
                type: integer
                format: int32
            X-RateLimit-Burst:
              description: Maximum number of concurrent API requests allowed
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        default:
          description: 'Any erroneous status code: 401 (auth error), 404 (not found),
            405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation
            error), 500 (server error), 503 (maintenance)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Basic Authentication: []
      - Token Authentication: []
components:
  schemas:
    AttachedVolumes:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Volume'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: volume
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
            bus: VIRTIO
            cpuHotPlug: true
            ramHotPlug: true
            type: HDD
            availabilityZone: AUTO
            discVirtioHotUnplug: true
            deviceNumber: 3
            imagePassword: mypass123
            size: 100.0
            nicHotPlug: true
            backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
            licenceType: LINUX
            name: My resource
            sshKeys:
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: volume
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
            bus: VIRTIO
            cpuHotPlug: true
            ramHotPlug: true
            type: HDD
            availabilityZone: AUTO
            discVirtioHotUnplug: true
            deviceNumber: 3
            imagePassword: mypass123
            size: 100.0
            nicHotPlug: true
            backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
            licenceType: LINUX
            name: My resource
            sshKeys:
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
    DatacenterElementMetadata:
      type: object
      properties:
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate:
          type: string
          description: The last time the resource was created
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        createdBy:
          type: string
          description: The user who created the resource.
          readOnly: true
          example: user@example.com
        createdByUserId:
          type: string
          description: The user id of the user who has created the resource.
          readOnly: true
          example: user@example.com
        lastModifiedDate:
          type: string
          description: The last time the resource has been modified
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        lastModifiedBy:
          type: string
          description: The user who last modified the resource.
          readOnly: true
          example: user@example.com
        lastModifiedByUserId:
          type: string
          description: The user id of the user who has last modified the resource.
          readOnly: true
          example: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        state:
          type: string
          description: State of the resource. *AVAILABLE* There are no pending modification
            requests for this item; *BUSY* There is at least one modification request
            pending and all following requests will be queued; *INACTIVE* Resource
            has been de-provisioned; *DEPLOYING* Resource state DEPLOYING - relevant
            for Kubernetes cluster/nodepool; *ACTIVE* Resource state ACTIVE - relevant
            for Kubernetes cluster/nodepool; *FAILED* Resource state FAILED - relevant
            for Kubernetes cluster/nodepool; *SUSPENDED* Resource state SUSPENDED
            - relevant for Kubernetes cluster/nodepool; *FAILED_SUSPENDED* Resource
            state FAILED_SUSPENDED - relevant for Kubernetes cluster; *UPDATING* Resource
            state UPDATING - relevant for Kubernetes cluster/nodepool; *FAILED_UPDATING*
            Resource state FAILED_UPDATING - relevant for Kubernetes cluster/nodepool;
            *DESTROYING* Resource state DESTROYING - relevant for Kubernetes cluster;
            *FAILED_DESTROYING* Resource state FAILED_DESTROYING - relevant for Kubernetes
            cluster/nodepool; *TERMINATED* Resource state TERMINATED - relevant for
            Kubernetes cluster/nodepool
          readOnly: true
          example: AVAILABLE
          enum:
          - AVAILABLE
          - INACTIVE
          - BUSY
          - DEPLOYING
          - ACTIVE
          - FAILED
          - SUSPENDED
          - FAILED_SUSPENDED
          - UPDATING
          - FAILED_UPDATING
          - DESTROYING
          - FAILED_DESTROYING
          - TERMINATED
      example:
        createdByUserId: user@example.com
        createdDate: 2015-12-04T14:34:09.809Z
        createdBy: user@example.com
        lastModifiedDate: 2015-12-04T14:34:09.809Z
        lastModifiedBy: user@example.com
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        state: AVAILABLE
        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
    KubernetesNodeMetadata:
      type: object
      properties:
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate:
          type: string
          description: The last time the resource was created
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        lastModifiedDate:
          type: string
          description: The last time the resource has been modified
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        state:
          type: string
          description: State of the resource.
          readOnly: true
          example: AVAILABLE
          enum:
          - PROVISIONING
          - PROVISIONED
          - READY
          - TERMINATING
          - REBUILDING
          - BUSY
        lastSoftwareUpdatedDate:
          type: string
          description: The last time the software updated on node.
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
      example:
        lastSoftwareUpdatedDate: 2015-12-04T14:34:09.809Z
        createdDate: 2015-12-04T14:34:09.809Z
        lastModifiedDate: 2015-12-04T14:34:09.809Z
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        state: AVAILABLE
    S3KeyMetadata:
      type: object
      properties:
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate:
          type: string
          description: The time the S3 key was created
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
      example:
        createdDate: 2015-12-04T14:34:09.809Z
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
    NoStateMetaData:
      type: object
      properties:
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate:
          type: string
          description: The time the Resource was created
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        createdBy:
          type: string
          description: The user who has created the resource.
          readOnly: true
          example: user@example.com
        createdByUserId:
          type: string
          description: The user id of the user who has created the resource.
          readOnly: true
          example: user@example.com
        lastModifiedDate:
          type: string
          description: The last time the resource has been modified
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        lastModifiedBy:
          type: string
          description: The user who last modified the resource.
          readOnly: true
          example: user@example.com
        lastModifiedByUserId:
          type: string
          description: The user id of the user who has last modified the resource.
          readOnly: true
          example: 63cef532-26fe-4a64-a4e0-de7c8a506c90
      example:
        createdByUserId: user@example.com
        createdDate: 2015-12-04T14:34:09.809Z
        createdBy: user@example.com
        lastModifiedDate: 2015-12-04T14:34:09.809Z
        lastModifiedBy: user@example.com
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
    VolumeProperties:
      required:
      - size
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        type:
          type: string
          description: Hardware type of the volume. Default is HDD
          example: HDD
          enum:
          - HDD
          - SSD
        size:
          type: number
          description: The size of the volume in GB
          example: 100.0
        availabilityZone:
          type: string
          description: The availability zone in which the volume should exist. The
            storage volume will be provisioned on as less physical storages as possible
            but cannot guarantee upfront
          example: AUTO
          enum:
          - AUTO
          - ZONE_1
          - ZONE_2
          - ZONE_3
        image:
          type: string
          description: Image or snapshot ID to be used as template for this volume
          example: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
        imagePassword:
          type: string
          description: Initial password to be set for installed OS. Works with public
            images only. Not modifiable, forbidden in update requests. Password rules
            allows all characters from a-z, A-Z, 0-9
          example: mypass123
        sshKeys:
          type: array
          description: Public SSH keys are set on the image as authorized keys for
            appropriate SSH login to the instance using the corresponding private
            key. This field may only be set in creation requests. When reading, it
            always returns null. SSH keys are only supported if a public Linux image
            is used for the volume creation.
          example:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
          items:
            type: string
        bus:
          type: string
          description: The bus type of the volume. Default is VIRTIO
          example: VIRTIO
          enum:
          - VIRTIO
          - IDE
        licenceType:
          type: string
          description: OS type of this volume
          readOnly: true
          example: LINUX
          enum:
          - UNKNOWN
          - WINDOWS
          - WINDOWS2016
          - LINUX
          - OTHER
        cpuHotPlug:
          type: boolean
          description: Is capable of CPU hot plug (no reboot required)
          example: true
        ramHotPlug:
          type: boolean
          description: Is capable of memory hot plug (no reboot required)
          example: true
        nicHotPlug:
          type: boolean
          description: Is capable of nic hot plug (no reboot required)
          example: true
        nicHotUnplug:
          type: boolean
          description: Is capable of nic hot unplug (no reboot required)
          example: true
        discVirtioHotPlug:
          type: boolean
          description: Is capable of Virt-IO drive hot plug (no reboot required)
          example: true
        discVirtioHotUnplug:
          type: boolean
          description: Is capable of Virt-IO drive hot unplug (no reboot required).
            This works only for non-Windows virtual Machines.
          example: true
        deviceNumber:
          type: integer
          description: The LUN ID of the storage volume. Null for volumes not mounted
            to any VM
          format: int64
          readOnly: true
          example: 3
        backupunitId:
          type: string
          description: The uuid of the Backup Unit that user has access to. The property
            is immutable and is only allowed to be set on a new volume creation. It
            is mandatory to provied either public image or imageAlias in conjunction
            with this property.
          example: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
      example:
        nicHotUnplug: true
        discVirtioHotPlug: true
        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
        bus: VIRTIO
        cpuHotPlug: true
        ramHotPlug: true
        type: HDD
        availabilityZone: AUTO
        discVirtioHotUnplug: true
        deviceNumber: 3
        imagePassword: mypass123
        size: 100.0
        nicHotPlug: true
        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
        licenceType: LINUX
        name: My resource
        sshKeys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
    Volume:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: volume
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/VolumeProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: volume
        properties:
          nicHotUnplug: true
          discVirtioHotPlug: true
          image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
          bus: VIRTIO
          cpuHotPlug: true
          ramHotPlug: true
          type: HDD
          availabilityZone: AUTO
          discVirtioHotUnplug: true
          deviceNumber: 3
          imagePassword: mypass123
          size: 100.0
          nicHotPlug: true
          backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
          licenceType: LINUX
          name: My resource
          sshKeys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
    Cdroms:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Image'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: image
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            public: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
            imageType: HDD
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: image
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            public: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
            imageType: HDD
    Image:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: image
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/ImageProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: image
        properties:
          nicHotUnplug: true
          discVirtioHotPlug: true
          cpuHotPlug: true
          ramHotPlug: true
          discScsiHotUnplug: true
          description: 'Image/Snapshot of Ubuntu '
          discVirtioHotUnplug: true
          size: 100.0
          nicHotPlug: true
          public: true
          discScsiHotPlug: true
          licenceType: LINUX
          name: My resource
          cpuHotUnplug: true
          location: us/las
          ramHotUnplug: true
          imageType: HDD
    ImageProperties:
      required:
      - licenceType
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        description:
          type: string
          description: Human readable description
          example: 'Image/Snapshot of Ubuntu '
        location:
          type: string
          description: 'Location of that image/snapshot. '
          readOnly: true
          example: us/las
        size:
          type: number
          description: The size of the image in GB
          readOnly: true
          example: 100.0
        cpuHotPlug:
          type: boolean
          description: Is capable of CPU hot plug (no reboot required)
          example: true
        cpuHotUnplug:
          type: boolean
          description: Is capable of CPU hot unplug (no reboot required)
          example: true
        ramHotPlug:
          type: boolean
          description: Is capable of memory hot plug (no reboot required)
          example: true
        ramHotUnplug:
          type: boolean
          description: Is capable of memory hot unplug (no reboot required)
          example: true
        nicHotPlug:
          type: boolean
          description: Is capable of nic hot plug (no reboot required)
          example: true
        nicHotUnplug:
          type: boolean
          description: Is capable of nic hot unplug (no reboot required)
          example: true
        discVirtioHotPlug:
          type: boolean
          description: Is capable of Virt-IO drive hot plug (no reboot required)
          example: true
        discVirtioHotUnplug:
          type: boolean
          description: Is capable of Virt-IO drive hot unplug (no reboot required).
            This works only for non-Windows virtual Machines.
          example: true
        discScsiHotPlug:
          type: boolean
          description: Is capable of SCSI drive hot plug (no reboot required)
          example: true
        discScsiHotUnplug:
          type: boolean
          description: Is capable of SCSI drive hot unplug (no reboot required). This
            works only for non-Windows virtual Machines.
          example: true
        licenceType:
          type: string
          description: OS type of this Image
          example: LINUX
          enum:
          - UNKNOWN
          - WINDOWS
          - WINDOWS2016
          - LINUX
          - OTHER
        imageType:
          type: string
          description: This indicates the type of image
          readOnly: true
          example: HDD
          enum:
          - HDD
          - CDROM
        public:
          type: boolean
          description: Indicates if the image is part of the public repository or
            not
          readOnly: true
          example: true
      example:
        nicHotUnplug: true
        discVirtioHotPlug: true
        cpuHotPlug: true
        ramHotPlug: true
        discScsiHotUnplug: true
        description: 'Image/Snapshot of Ubuntu '
        discVirtioHotUnplug: true
        size: 100.0
        nicHotPlug: true
        public: true
        discScsiHotPlug: true
        licenceType: LINUX
        name: My resource
        cpuHotUnplug: true
        location: us/las
        ramHotUnplug: true
        imageType: HDD
    ContractProperties:
      type: object
      properties:
        contractNumber:
          type: integer
          description: contract number
          format: int64
          readOnly: true
        owner:
          type: string
          description: owner of the contract
          readOnly: true
        status:
          type: string
          description: status of the contract
          readOnly: true
        regDomain:
          type: string
          description: Registration domain of the contract
          readOnly: true
        resourceLimits:
          $ref: '#/components/schemas/ResourceLimits'
      example:
        owner: owner
        regDomain: regDomain
        contractNumber: 0
        resourceLimits:
          ramProvisioned: 7
          k8sClustersProvisioned: 1
          coresPerServer: 6
          hddVolumeProvisioned: 2
          reservedIpsOnContract: 1
          reservedIpsInUse: 6
          ssdLimitPerContract: 7
          k8sClusterLimitTotal: 7
          ssdLimitPerVolume: 4
          reservableIps: 1
          hddLimitPerVolume: 9
          ramPerServer: 5
          coresPerContract: 1
          ramPerContract: 2
          ssdVolumeProvisioned: 1
          coresProvisioned: 5
          hddLimitPerContract: 3
        status: status
    Contract:
      required:
      - properties
      type: object
      properties:
        type:
          type: object
          description: The type of the resource
          example: resource
          allOf:
          - $ref: '#/components/schemas/Type'
        properties:
          $ref: '#/components/schemas/ContractProperties'
      example:
        type: resource
        properties:
          owner: owner
          regDomain: regDomain
          contractNumber: 0
          resourceLimits:
            ramProvisioned: 7
            k8sClustersProvisioned: 1
            coresPerServer: 6
            hddVolumeProvisioned: 2
            reservedIpsOnContract: 1
            reservedIpsInUse: 6
            ssdLimitPerContract: 7
            k8sClusterLimitTotal: 7
            ssdLimitPerVolume: 4
            reservableIps: 1
            hddLimitPerVolume: 9
            ramPerServer: 5
            coresPerContract: 1
            ramPerContract: 2
            ssdVolumeProvisioned: 1
            coresProvisioned: 5
            hddLimitPerContract: 3
          status: status
    ResourceLimits:
      required:
      - coresPerContract
      - coresPerServer
      - coresProvisioned
      - hddLimitPerContract
      - hddLimitPerVolume
      - hddVolumeProvisioned
      - k8sClusterLimitTotal
      - k8sClustersProvisioned
      - ramPerContract
      - ramPerServer
      - ramProvisioned
      - reservableIps
      - reservedIpsInUse
      - reservedIpsOnContract
      - ssdLimitPerContract
      - ssdLimitPerVolume
      - ssdVolumeProvisioned
      type: object
      properties:
        coresPerServer:
          type: integer
          description: maximum number of cores per server
          format: int32
        coresPerContract:
          type: integer
          description: maximum cores per contract
          format: int32
        coresProvisioned:
          type: integer
          description: number of cores provisioned
          format: int32
        ramPerServer:
          type: integer
          description: maximum ram per server
          format: int32
        ramPerContract:
          type: integer
          description: maximum ram per contract
          format: int32
        ramProvisioned:
          type: integer
          description: ram provisioned
          format: int32
        hddLimitPerVolume:
          type: integer
          description: hdd limit per volume
          format: int64
        hddLimitPerContract:
          type: integer
          description: hdd limit per contract
          format: int64
        hddVolumeProvisioned:
          type: integer
          description: hdd volume provisioned
          format: int64
        ssdLimitPerVolume:
          type: integer
          description: ssd limit per volume
          format: int64
        ssdLimitPerContract:
          type: integer
          description: ssd limit per contract
          format: int64
        ssdVolumeProvisioned:
          type: integer
          description: ssd volume provisioned
          format: int64
        reservableIps:
          type: integer
          description: total reservable ip limit of the customer
          format: int32
        reservedIpsOnContract:
          type: integer
          description: reserved ips on a contract
          format: int32
        reservedIpsInUse:
          type: integer
          description: reserved ips in use
          format: int32
        k8sClusterLimitTotal:
          type: integer
          description: k8s clusters total limit
          format: int32
        k8sClustersProvisioned:
          type: integer
          description: k8s clusters provisioned
          format: int32
      example:
        ramProvisioned: 7
        k8sClustersProvisioned: 1
        coresPerServer: 6
        hddVolumeProvisioned: 2
        reservedIpsOnContract: 1
        reservedIpsInUse: 6
        ssdLimitPerContract: 7
        k8sClusterLimitTotal: 7
        ssdLimitPerVolume: 4
        reservableIps: 1
        hddLimitPerVolume: 9
        ramPerServer: 5
        coresPerContract: 1
        ramPerContract: 2
        ssdVolumeProvisioned: 1
        coresProvisioned: 5
        hddLimitPerContract: 3
    BalancedNics:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Nic'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - null
        - null
    DataCenterEntities:
      type: object
      properties:
        servers:
          $ref: '#/components/schemas/Servers'
        volumes:
          $ref: '#/components/schemas/Volumes'
        loadbalancers:
          $ref: '#/components/schemas/Loadbalancers'
        lans:
          $ref: '#/components/schemas/Lans'
      example:
        servers:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - entities:
              cdroms:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: image
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    cpuHotPlug: true
                    ramHotPlug: true
                    discScsiHotUnplug: true
                    description: 'Image/Snapshot of Ubuntu '
                    discVirtioHotUnplug: true
                    size: 100.0
                    nicHotPlug: true
                    public: true
                    discScsiHotPlug: true
                    licenceType: LINUX
                    name: My resource
                    cpuHotUnplug: true
                    location: us/las
                    ramHotUnplug: true
                    imageType: HDD
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: image
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    cpuHotPlug: true
                    ramHotPlug: true
                    discScsiHotUnplug: true
                    description: 'Image/Snapshot of Ubuntu '
                    discVirtioHotUnplug: true
                    size: 100.0
                    nicHotPlug: true
                    public: true
                    discScsiHotPlug: true
                    licenceType: LINUX
                    name: My resource
                    cpuHotUnplug: true
                    location: us/las
                    ramHotUnplug: true
                    imageType: HDD
              volumes:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: volume
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                    bus: VIRTIO
                    cpuHotPlug: true
                    ramHotPlug: true
                    type: HDD
                    availabilityZone: AUTO
                    discVirtioHotUnplug: true
                    deviceNumber: 3
                    imagePassword: mypass123
                    size: 100.0
                    nicHotPlug: true
                    backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                    licenceType: LINUX
                    name: My resource
                    sshKeys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: volume
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                    bus: VIRTIO
                    cpuHotPlug: true
                    ramHotPlug: true
                    type: HDD
                    availabilityZone: AUTO
                    discVirtioHotUnplug: true
                    deviceNumber: 3
                    imagePassword: mypass123
                    size: 100.0
                    nicHotPlug: true
                    backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                    licenceType: LINUX
                    name: My resource
                    sshKeys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              nics:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - entities:
                    firewallrules:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: collection
                      items:
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: nic
                  properties:
                    nat: true
                    name: My resource
                    lan: 2
                    ips:
                    - ips
                    - ips
                    mac: 00:0a:95:9d:68:16
                    dhcp: true
                    firewallActive: false
                - entities:
                    firewallrules:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: collection
                      items:
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: nic
                  properties:
                    nat: true
                    name: My resource
                    lan: 2
                    ips:
                    - ips
                    - ips
                    mac: 00:0a:95:9d:68:16
                    dhcp: true
                    firewallActive: false
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: server
            properties:
              cores: 4
              bootCdrom:
                id: id
                href: <RESOURCE-URI>
                type: resource
              name: My resource
              cpuFamily: AMD_OPTERON
              availabilityZone: AUTO
              vmState: RUNNING
              ram: 4096
          - entities:
              cdroms:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: image
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    cpuHotPlug: true
                    ramHotPlug: true
                    discScsiHotUnplug: true
                    description: 'Image/Snapshot of Ubuntu '
                    discVirtioHotUnplug: true
                    size: 100.0
                    nicHotPlug: true
                    public: true
                    discScsiHotPlug: true
                    licenceType: LINUX
                    name: My resource
                    cpuHotUnplug: true
                    location: us/las
                    ramHotUnplug: true
                    imageType: HDD
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: image
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    cpuHotPlug: true
                    ramHotPlug: true
                    discScsiHotUnplug: true
                    description: 'Image/Snapshot of Ubuntu '
                    discVirtioHotUnplug: true
                    size: 100.0
                    nicHotPlug: true
                    public: true
                    discScsiHotPlug: true
                    licenceType: LINUX
                    name: My resource
                    cpuHotUnplug: true
                    location: us/las
                    ramHotUnplug: true
                    imageType: HDD
              volumes:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: volume
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                    bus: VIRTIO
                    cpuHotPlug: true
                    ramHotPlug: true
                    type: HDD
                    availabilityZone: AUTO
                    discVirtioHotUnplug: true
                    deviceNumber: 3
                    imagePassword: mypass123
                    size: 100.0
                    nicHotPlug: true
                    backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                    licenceType: LINUX
                    name: My resource
                    sshKeys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: volume
                  properties:
                    nicHotUnplug: true
                    discVirtioHotPlug: true
                    image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                    bus: VIRTIO
                    cpuHotPlug: true
                    ramHotPlug: true
                    type: HDD
                    availabilityZone: AUTO
                    discVirtioHotUnplug: true
                    deviceNumber: 3
                    imagePassword: mypass123
                    size: 100.0
                    nicHotPlug: true
                    backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                    licenceType: LINUX
                    name: My resource
                    sshKeys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              nics:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - entities:
                    firewallrules:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: collection
                      items:
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: nic
                  properties:
                    nat: true
                    name: My resource
                    lan: 2
                    ips:
                    - ips
                    - ips
                    mac: 00:0a:95:9d:68:16
                    dhcp: true
                    firewallActive: false
                - entities:
                    firewallrules:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: collection
                      items:
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                      - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: firewall-rule
                        properties:
                          sourceMac: 00:0a:95:9d:68:16
                          targetIp: 22.231.113.64
                          icmpType: 8
                          protocol: TCP
                          sourceIp: 22.231.113.64
                          icmpCode: 0
                          name: My resource
                          portRangeStart: 8
                          portRangeEnd: 8
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: nic
                  properties:
                    nat: true
                    name: My resource
                    lan: 2
                    ips:
                    - ips
                    - ips
                    mac: 00:0a:95:9d:68:16
                    dhcp: true
                    firewallActive: false
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: server
            properties:
              cores: 4
              bootCdrom:
                id: id
                href: <RESOURCE-URI>
                type: resource
              name: My resource
              cpuFamily: AMD_OPTERON
              availabilityZone: AUTO
              vmState: RUNNING
              ram: 4096
        volumes:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: volume
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
              bus: VIRTIO
              cpuHotPlug: true
              ramHotPlug: true
              type: HDD
              availabilityZone: AUTO
              discVirtioHotUnplug: true
              deviceNumber: 3
              imagePassword: mypass123
              size: 100.0
              nicHotPlug: true
              backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
              licenceType: LINUX
              name: My resource
              sshKeys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: volume
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
              bus: VIRTIO
              cpuHotPlug: true
              ramHotPlug: true
              type: HDD
              availabilityZone: AUTO
              discVirtioHotUnplug: true
              deviceNumber: 3
              imagePassword: mypass123
              size: 100.0
              nicHotPlug: true
              backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
              licenceType: LINUX
              name: My resource
              sshKeys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
        lans:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
            entities:
              nics:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - null
                - null
            id: "5"
            href: <RESOURCE-URI>
            type: lan
            properties:
              pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
              public: true
              name: My resource
              ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"}
                ] }'
        loadbalancers:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - entities:
              balancednics:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: loadbalancer
            properties:
              ip: 22.231.113.64
              name: My resource
              dhcp: true
          - entities:
              balancednics:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: loadbalancer
            properties:
              ip: 22.231.113.64
              name: My resource
              dhcp: true
    DatacenterProperties:
      required:
      - location
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        description:
          type: string
          description: A description for the datacenter, e.g. staging, production
          example: My Production Datacenter
        location:
          type: string
          description: The physical location where the datacenter will be created.
            This will be where all of your servers live. Property cannot be modified
            after datacenter creation (disallowed in update requests)
          example: us/las
        version:
          type: integer
          description: The version of that Data Center. Gets incremented with every
            change
          format: int32
          readOnly: true
          example: 8
        features:
          type: array
          description: List of features supported by the location this data center
            is part of
          readOnly: true
          example: '[SSD]'
          items:
            type: string
            enum:
            - SSD
            - SSD_STORAGE_ZONING
        secAuthProtection:
          type: boolean
          description: Boolean value representing if the data center requires extra
            protection e.g. two factor protection
          example: true
      example:
        features: '[SSD]'
        secAuthProtection: true
        name: My resource
        description: My Production Datacenter
        location: us/las
        version: 8
    Datacenter:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: datacenter
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/DatacenterProperties'
        entities:
          $ref: '#/components/schemas/DataCenterEntities'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        entities:
          servers:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - entities:
                cdroms:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: image
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      cpuHotPlug: true
                      ramHotPlug: true
                      discScsiHotUnplug: true
                      description: 'Image/Snapshot of Ubuntu '
                      discVirtioHotUnplug: true
                      size: 100.0
                      nicHotPlug: true
                      public: true
                      discScsiHotPlug: true
                      licenceType: LINUX
                      name: My resource
                      cpuHotUnplug: true
                      location: us/las
                      ramHotUnplug: true
                      imageType: HDD
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: image
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      cpuHotPlug: true
                      ramHotPlug: true
                      discScsiHotUnplug: true
                      description: 'Image/Snapshot of Ubuntu '
                      discVirtioHotUnplug: true
                      size: 100.0
                      nicHotPlug: true
                      public: true
                      discScsiHotPlug: true
                      licenceType: LINUX
                      name: My resource
                      cpuHotUnplug: true
                      location: us/las
                      ramHotUnplug: true
                      imageType: HDD
                volumes:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: volume
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                      bus: VIRTIO
                      cpuHotPlug: true
                      ramHotPlug: true
                      type: HDD
                      availabilityZone: AUTO
                      discVirtioHotUnplug: true
                      deviceNumber: 3
                      imagePassword: mypass123
                      size: 100.0
                      nicHotPlug: true
                      backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                      licenceType: LINUX
                      name: My resource
                      sshKeys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: volume
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                      bus: VIRTIO
                      cpuHotPlug: true
                      ramHotPlug: true
                      type: HDD
                      availabilityZone: AUTO
                      discVirtioHotUnplug: true
                      deviceNumber: 3
                      imagePassword: mypass123
                      size: 100.0
                      nicHotPlug: true
                      backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                      licenceType: LINUX
                      name: My resource
                      sshKeys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                nics:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - entities:
                      firewallrules:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: collection
                        items:
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: nic
                    properties:
                      nat: true
                      name: My resource
                      lan: 2
                      ips:
                      - ips
                      - ips
                      mac: 00:0a:95:9d:68:16
                      dhcp: true
                      firewallActive: false
                  - entities:
                      firewallrules:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: collection
                        items:
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: nic
                    properties:
                      nat: true
                      name: My resource
                      lan: 2
                      ips:
                      - ips
                      - ips
                      mac: 00:0a:95:9d:68:16
                      dhcp: true
                      firewallActive: false
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: server
              properties:
                cores: 4
                bootCdrom:
                  id: id
                  href: <RESOURCE-URI>
                  type: resource
                name: My resource
                cpuFamily: AMD_OPTERON
                availabilityZone: AUTO
                vmState: RUNNING
                ram: 4096
            - entities:
                cdroms:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: image
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      cpuHotPlug: true
                      ramHotPlug: true
                      discScsiHotUnplug: true
                      description: 'Image/Snapshot of Ubuntu '
                      discVirtioHotUnplug: true
                      size: 100.0
                      nicHotPlug: true
                      public: true
                      discScsiHotPlug: true
                      licenceType: LINUX
                      name: My resource
                      cpuHotUnplug: true
                      location: us/las
                      ramHotUnplug: true
                      imageType: HDD
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: image
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      cpuHotPlug: true
                      ramHotPlug: true
                      discScsiHotUnplug: true
                      description: 'Image/Snapshot of Ubuntu '
                      discVirtioHotUnplug: true
                      size: 100.0
                      nicHotPlug: true
                      public: true
                      discScsiHotPlug: true
                      licenceType: LINUX
                      name: My resource
                      cpuHotUnplug: true
                      location: us/las
                      ramHotUnplug: true
                      imageType: HDD
                volumes:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: volume
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                      bus: VIRTIO
                      cpuHotPlug: true
                      ramHotPlug: true
                      type: HDD
                      availabilityZone: AUTO
                      discVirtioHotUnplug: true
                      deviceNumber: 3
                      imagePassword: mypass123
                      size: 100.0
                      nicHotPlug: true
                      backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                      licenceType: LINUX
                      name: My resource
                      sshKeys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: volume
                    properties:
                      nicHotUnplug: true
                      discVirtioHotPlug: true
                      image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                      bus: VIRTIO
                      cpuHotPlug: true
                      ramHotPlug: true
                      type: HDD
                      availabilityZone: AUTO
                      discVirtioHotUnplug: true
                      deviceNumber: 3
                      imagePassword: mypass123
                      size: 100.0
                      nicHotPlug: true
                      backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                      licenceType: LINUX
                      name: My resource
                      sshKeys:
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                nics:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - entities:
                      firewallrules:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: collection
                        items:
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: nic
                    properties:
                      nat: true
                      name: My resource
                      lan: 2
                      ips:
                      - ips
                      - ips
                      mac: 00:0a:95:9d:68:16
                      dhcp: true
                      firewallActive: false
                  - entities:
                      firewallrules:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: <RESOURCE-URI>
                        type: collection
                        items:
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: firewall-rule
                          properties:
                            sourceMac: 00:0a:95:9d:68:16
                            targetIp: 22.231.113.64
                            icmpType: 8
                            protocol: TCP
                            sourceIp: 22.231.113.64
                            icmpCode: 0
                            name: My resource
                            portRangeStart: 8
                            portRangeEnd: 8
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: nic
                    properties:
                      nat: true
                      name: My resource
                      lan: 2
                      ips:
                      - ips
                      - ips
                      mac: 00:0a:95:9d:68:16
                      dhcp: true
                      firewallActive: false
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: server
              properties:
                cores: 4
                bootCdrom:
                  id: id
                  href: <RESOURCE-URI>
                  type: resource
                name: My resource
                cpuFamily: AMD_OPTERON
                availabilityZone: AUTO
                vmState: RUNNING
                ram: 4096
          volumes:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: volume
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                bus: VIRTIO
                cpuHotPlug: true
                ramHotPlug: true
                type: HDD
                availabilityZone: AUTO
                discVirtioHotUnplug: true
                deviceNumber: 3
                imagePassword: mypass123
                size: 100.0
                nicHotPlug: true
                backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                licenceType: LINUX
                name: My resource
                sshKeys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: volume
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                bus: VIRTIO
                cpuHotPlug: true
                ramHotPlug: true
                type: HDD
                availabilityZone: AUTO
                discVirtioHotUnplug: true
                deviceNumber: 3
                imagePassword: mypass123
                size: 100.0
                nicHotPlug: true
                backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                licenceType: LINUX
                name: My resource
                sshKeys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
          lans:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
              entities:
                nics:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - null
                  - null
              id: "5"
              href: <RESOURCE-URI>
              type: lan
              properties:
                pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
                public: true
                name: My resource
                ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid":
                  "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"} ] }'
          loadbalancers:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - entities:
                balancednics:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: loadbalancer
              properties:
                ip: 22.231.113.64
                name: My resource
                dhcp: true
            - entities:
                balancednics:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: loadbalancer
              properties:
                ip: 22.231.113.64
                name: My resource
                dhcp: true
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: datacenter
        properties:
          features: '[SSD]'
          secAuthProtection: true
          name: My resource
          description: My Production Datacenter
          location: us/las
          version: 8
    Datacenters:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Datacenter'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            servers:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  cdroms:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                  volumes:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: server
                properties:
                  cores: 4
                  bootCdrom:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  name: My resource
                  cpuFamily: AMD_OPTERON
                  availabilityZone: AUTO
                  vmState: RUNNING
                  ram: 4096
              - entities:
                  cdroms:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                  volumes:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: server
                properties:
                  cores: 4
                  bootCdrom:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  name: My resource
                  cpuFamily: AMD_OPTERON
                  availabilityZone: AUTO
                  vmState: RUNNING
                  ram: 4096
            volumes:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            lans:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
                entities:
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: "5"
                href: <RESOURCE-URI>
                type: lan
                properties:
                  pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
                  public: true
                  name: My resource
                  ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid":
                    "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"} ] }'
            loadbalancers:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  balancednics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: loadbalancer
                properties:
                  ip: 22.231.113.64
                  name: My resource
                  dhcp: true
              - entities:
                  balancednics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: loadbalancer
                properties:
                  ip: 22.231.113.64
                  name: My resource
                  dhcp: true
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: datacenter
          properties:
            features: '[SSD]'
            secAuthProtection: true
            name: My resource
            description: My Production Datacenter
            location: us/las
            version: 8
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            servers:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  cdroms:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                  volumes:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: server
                properties:
                  cores: 4
                  bootCdrom:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  name: My resource
                  cpuFamily: AMD_OPTERON
                  availabilityZone: AUTO
                  vmState: RUNNING
                  ram: 4096
              - entities:
                  cdroms:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: image
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        cpuHotPlug: true
                        ramHotPlug: true
                        discScsiHotUnplug: true
                        description: 'Image/Snapshot of Ubuntu '
                        discVirtioHotUnplug: true
                        size: 100.0
                        nicHotPlug: true
                        public: true
                        discScsiHotPlug: true
                        licenceType: LINUX
                        name: My resource
                        cpuHotUnplug: true
                        location: us/las
                        ramHotUnplug: true
                        imageType: HDD
                  volumes:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: volume
                      properties:
                        nicHotUnplug: true
                        discVirtioHotPlug: true
                        image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                        bus: VIRTIO
                        cpuHotPlug: true
                        ramHotPlug: true
                        type: HDD
                        availabilityZone: AUTO
                        discVirtioHotUnplug: true
                        deviceNumber: 3
                        imagePassword: mypass123
                        size: 100.0
                        nicHotPlug: true
                        backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                        licenceType: LINUX
                        name: My resource
                        sshKeys:
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                    - entities:
                        firewallrules:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: <RESOURCE-URI>
                          type: collection
                          items:
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                            href: <RESOURCE-URI>
                            type: firewall-rule
                            properties:
                              sourceMac: 00:0a:95:9d:68:16
                              targetIp: 22.231.113.64
                              icmpType: 8
                              protocol: TCP
                              sourceIp: 22.231.113.64
                              icmpCode: 0
                              name: My resource
                              portRangeStart: 8
                              portRangeEnd: 8
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: nic
                      properties:
                        nat: true
                        name: My resource
                        lan: 2
                        ips:
                        - ips
                        - ips
                        mac: 00:0a:95:9d:68:16
                        dhcp: true
                        firewallActive: false
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: server
                properties:
                  cores: 4
                  bootCdrom:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  name: My resource
                  cpuFamily: AMD_OPTERON
                  availabilityZone: AUTO
                  vmState: RUNNING
                  ram: 4096
            volumes:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            lans:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
                entities:
                  nics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: "5"
                href: <RESOURCE-URI>
                type: lan
                properties:
                  pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
                  public: true
                  name: My resource
                  ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid":
                    "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"} ] }'
            loadbalancers:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  balancednics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: loadbalancer
                properties:
                  ip: 22.231.113.64
                  name: My resource
                  dhcp: true
              - entities:
                  balancednics:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: loadbalancer
                properties:
                  ip: 22.231.113.64
                  name: My resource
                  dhcp: true
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: datacenter
          properties:
            features: '[SSD]'
            secAuthProtection: true
            name: My resource
            description: My Production Datacenter
            location: us/las
            version: 8
    FirewallRule:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: firewall-rule
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/FirewallruleProperties'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: firewall-rule
        properties:
          sourceMac: 00:0a:95:9d:68:16
          targetIp: 22.231.113.64
          icmpType: 8
          protocol: TCP
          sourceIp: 22.231.113.64
          icmpCode: 0
          name: My resource
          portRangeStart: 8
          portRangeEnd: 8
    FirewallRules:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/FirewallRule'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: firewall-rule
          properties:
            sourceMac: 00:0a:95:9d:68:16
            targetIp: 22.231.113.64
            icmpType: 8
            protocol: TCP
            sourceIp: 22.231.113.64
            icmpCode: 0
            name: My resource
            portRangeStart: 8
            portRangeEnd: 8
        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: firewall-rule
          properties:
            sourceMac: 00:0a:95:9d:68:16
            targetIp: 22.231.113.64
            icmpType: 8
            protocol: TCP
            sourceIp: 22.231.113.64
            icmpCode: 0
            name: My resource
            portRangeStart: 8
            portRangeEnd: 8
    FirewallruleProperties:
      required:
      - protocol
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        protocol:
          type: string
          description: The protocol for the rule. Property cannot be modified after
            creation (disallowed in update requests)
          example: TCP
          enum:
          - TCP
          - UDP
          - ICMP
          - ANY
        sourceMac:
          type: string
          description: 'Only traffic originating from the respective MAC address is
            allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows all source
            MAC address'
          example: 00:0a:95:9d:68:16
          enum:
          - '@Valid MAC address@'
          - "null"
        sourceIp:
          type: string
          description: Only traffic originating from the respective IPv4 address is
            allowed. Value null allows all source IPs
          example: 22.231.113.64
          enum:
          - '@Valid IP address@'
          - "null"
        targetIp:
          type: string
          description: In case the target NIC has multiple IP addresses, only traffic
            directed to the respective IP address of the NIC is allowed. Value null
            allows all target IPs
          example: 22.231.113.64
          enum:
          - '@Valid IP address@'
          - "null"
        icmpCode:
          maximum: 254
          minimum: 0
          type: integer
          description: Defines the allowed code (from 0 to 254) if protocol ICMP is
            chosen. Value null allows all codes
          format: int32
          example: 0
        icmpType:
          maximum: 254
          minimum: 0
          type: integer
          description: Defines the allowed type (from 0 to 254) if the protocol ICMP
            is chosen. Value null allows all types
          format: int32
          example: 8
        portRangeStart:
          maximum: 65534
          minimum: 1
          type: integer
          description: Defines the start range of the allowed port (from 1 to 65534)
            if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd
            value null to allow all ports
          format: int32
          example: 8
        portRangeEnd:
          maximum: 65534
          minimum: 1
          type: integer
          description: Defines the end range of the allowed port (from 1 to 65534)
            if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd
            null to allow all ports
          format: int32
          example: 8
      example:
        sourceMac: 00:0a:95:9d:68:16
        targetIp: 22.231.113.64
        icmpType: 8
        protocol: TCP
        sourceIp: 22.231.113.64
        icmpCode: 0
        name: My resource
        portRangeStart: 8
        portRangeEnd: 8
    IPFailover:
      type: object
      properties:
        ip:
          type: string
        nicUuid:
          type: string
    LanEntities:
      type: object
      properties:
        nics:
          $ref: '#/components/schemas/LanNics'
      example:
        nics:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - null
          - null
    LanNics:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Nic'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - null
        - null
    LanProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        ipFailover:
          type: array
          description: IP failover configurations for lan
          example: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"}
            ] }'
          items:
            $ref: '#/components/schemas/IPFailover'
        pcc:
          type: string
          description: Unique identifier of the private cross connect the given LAN
            is connected to if any
          example: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
        public:
          type: boolean
          description: Does this LAN faces the public Internet or not
          example: true
      example:
        pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
        public: true
        name: My resource
        ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"}
          ] }'
    Lan:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: "5"
        type:
          type: object
          description: The type of object that has been created
          example: lan
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/LanProperties'
        entities:
          $ref: '#/components/schemas/LanEntities'
      example:
        entities:
          nics:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - null
            - null
        id: "5"
        href: <RESOURCE-URI>
        type: lan
        properties:
          pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
          public: true
          name: My resource
          ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"}
            ] }'
    LanPost:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: "5"
        type:
          type: object
          description: The type of object that has been created
          example: lan
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        entities:
          $ref: '#/components/schemas/LanEntities'
        properties:
          $ref: '#/components/schemas/LanPropertiesPost'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        entities:
          nics:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - null
            - null
        id: "5"
        href: <RESOURCE-URI>
        type: lan
        properties:
          public: true
          name: My resource
    Lans:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          $ref: '#/components/schemas/Lan'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
          entities:
            nics:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - null
              - null
          id: "5"
          href: <RESOURCE-URI>
          type: lan
          properties:
            pcc: 3c11273c-b3e1-4ca3-8134-84fd2dd4ebec
            public: true
            name: My resource
            ipFailover: '{ "ipFailover": [ { "ip": "192.18.2.231", "nicUuid": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"}
              ] }'
    Loadbalancer:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: loadbalancer
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/LoadbalancerProperties'
        entities:
          $ref: '#/components/schemas/LoadbalancerEntities'
      example:
        entities:
          balancednics:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - null
            - null
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: loadbalancer
        properties:
          ip: 22.231.113.64
          name: My resource
          dhcp: true
    LoadbalancerEntities:
      type: object
      properties:
        balancednics:
          $ref: '#/components/schemas/BalancedNics'
      example:
        balancednics:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - null
          - null
    LoadbalancerProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        ip:
          type: string
          description: IPv4 address of the loadbalancer. All attached NICs will inherit
            this IP. Leaving value null will assign IP automatically
          example: 22.231.113.64
          enum:
          - '@Valid IP address@'
          - "null"
        dhcp:
          type: boolean
          description: Indicates if the loadbalancer will reserve an IP using DHCP
          example: true
      example:
        ip: 22.231.113.64
        name: My resource
        dhcp: true
    Loadbalancers:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Loadbalancer'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - entities:
            balancednics:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: loadbalancer
          properties:
            ip: 22.231.113.64
            name: My resource
            dhcp: true
        - entities:
            balancednics:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: loadbalancer
          properties:
            ip: 22.231.113.64
            name: My resource
            dhcp: true
    Nic:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: nic
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/NicProperties'
        entities:
          $ref: '#/components/schemas/NicEntities'
      example:
        entities:
          firewallrules:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: firewall-rule
              properties:
                sourceMac: 00:0a:95:9d:68:16
                targetIp: 22.231.113.64
                icmpType: 8
                protocol: TCP
                sourceIp: 22.231.113.64
                icmpCode: 0
                name: My resource
                portRangeStart: 8
                portRangeEnd: 8
            - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: firewall-rule
              properties:
                sourceMac: 00:0a:95:9d:68:16
                targetIp: 22.231.113.64
                icmpType: 8
                protocol: TCP
                sourceIp: 22.231.113.64
                icmpCode: 0
                name: My resource
                portRangeStart: 8
                portRangeEnd: 8
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: nic
        properties:
          nat: true
          name: My resource
          lan: 2
          ips:
          - ips
          - ips
          mac: 00:0a:95:9d:68:16
          dhcp: true
          firewallActive: false
    NicEntities:
      type: object
      properties:
        firewallrules:
          $ref: '#/components/schemas/FirewallRules'
      example:
        firewallrules:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: firewall-rule
            properties:
              sourceMac: 00:0a:95:9d:68:16
              targetIp: 22.231.113.64
              icmpType: 8
              protocol: TCP
              sourceIp: 22.231.113.64
              icmpCode: 0
              name: My resource
              portRangeStart: 8
              portRangeEnd: 8
          - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: firewall-rule
            properties:
              sourceMac: 00:0a:95:9d:68:16
              targetIp: 22.231.113.64
              icmpType: 8
              protocol: TCP
              sourceIp: 22.231.113.64
              icmpCode: 0
              name: My resource
              portRangeStart: 8
              portRangeEnd: 8
    NicProperties:
      required:
      - lan
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        mac:
          type: string
          description: The MAC address of the NIC
          readOnly: true
          example: 00:0a:95:9d:68:16
        ips:
          type: array
          description: Collection of IP addresses assigned to a nic. Explicitly assigned
            public IPs need to come from reserved IP blocks, Passing value null or
            empty array will assign an IP address automatically.
          items:
            type: string
        dhcp:
          type: boolean
          description: Indicates if the nic will reserve an IP using DHCP
          example: true
        lan:
          type: integer
          description: The LAN ID the NIC will sit on. If the LAN ID does not exist
            it will be implicitly created
          format: int32
          example: 2
        firewallActive:
          type: boolean
          description: Activate or deactivate the firewall. By default an active firewall
            without any defined rules will block all incoming network traffic except
            for the firewall rules that explicitly allows certain protocols, ip addresses
            and ports.
          example: false
        nat:
          type: boolean
          description: Indicates if NAT is enabled on this NIC
          example: true
      example:
        nat: true
        name: My resource
        lan: 2
        ips:
        - ips
        - ips
        mac: 00:0a:95:9d:68:16
        dhcp: true
        firewallActive: false
    Nics:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Nic'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - entities:
            firewallrules:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: firewall-rule
                properties:
                  sourceMac: 00:0a:95:9d:68:16
                  targetIp: 22.231.113.64
                  icmpType: 8
                  protocol: TCP
                  sourceIp: 22.231.113.64
                  icmpCode: 0
                  name: My resource
                  portRangeStart: 8
                  portRangeEnd: 8
              - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: firewall-rule
                properties:
                  sourceMac: 00:0a:95:9d:68:16
                  targetIp: 22.231.113.64
                  icmpType: 8
                  protocol: TCP
                  sourceIp: 22.231.113.64
                  icmpCode: 0
                  name: My resource
                  portRangeStart: 8
                  portRangeEnd: 8
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: nic
          properties:
            nat: true
            name: My resource
            lan: 2
            ips:
            - ips
            - ips
            mac: 00:0a:95:9d:68:16
            dhcp: true
            firewallActive: false
        - entities:
            firewallrules:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: firewall-rule
                properties:
                  sourceMac: 00:0a:95:9d:68:16
                  targetIp: 22.231.113.64
                  icmpType: 8
                  protocol: TCP
                  sourceIp: 22.231.113.64
                  icmpCode: 0
                  name: My resource
                  portRangeStart: 8
                  portRangeEnd: 8
              - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: firewall-rule
                properties:
                  sourceMac: 00:0a:95:9d:68:16
                  targetIp: 22.231.113.64
                  icmpType: 8
                  protocol: TCP
                  sourceIp: 22.231.113.64
                  icmpCode: 0
                  name: My resource
                  portRangeStart: 8
                  portRangeEnd: 8
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: nic
          properties:
            nat: true
            name: My resource
            lan: 2
            ips:
            - ips
            - ips
            mac: 00:0a:95:9d:68:16
            dhcp: true
            firewallActive: false
    ResourceReference:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
        type:
          type: object
          description: The type of object that has been created
          example: resource
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
      example:
        id: id
        href: <RESOURCE-URI>
        type: resource
    ServerEntities:
      type: object
      properties:
        cdroms:
          $ref: '#/components/schemas/Cdroms'
        volumes:
          $ref: '#/components/schemas/AttachedVolumes'
        nics:
          $ref: '#/components/schemas/Nics'
      example:
        cdroms:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: image
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              cpuHotPlug: true
              ramHotPlug: true
              discScsiHotUnplug: true
              description: 'Image/Snapshot of Ubuntu '
              discVirtioHotUnplug: true
              size: 100.0
              nicHotPlug: true
              public: true
              discScsiHotPlug: true
              licenceType: LINUX
              name: My resource
              cpuHotUnplug: true
              location: us/las
              ramHotUnplug: true
              imageType: HDD
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: image
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              cpuHotPlug: true
              ramHotPlug: true
              discScsiHotUnplug: true
              description: 'Image/Snapshot of Ubuntu '
              discVirtioHotUnplug: true
              size: 100.0
              nicHotPlug: true
              public: true
              discScsiHotPlug: true
              licenceType: LINUX
              name: My resource
              cpuHotUnplug: true
              location: us/las
              ramHotUnplug: true
              imageType: HDD
        volumes:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: volume
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
              bus: VIRTIO
              cpuHotPlug: true
              ramHotPlug: true
              type: HDD
              availabilityZone: AUTO
              discVirtioHotUnplug: true
              deviceNumber: 3
              imagePassword: mypass123
              size: 100.0
              nicHotPlug: true
              backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
              licenceType: LINUX
              name: My resource
              sshKeys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: volume
            properties:
              nicHotUnplug: true
              discVirtioHotPlug: true
              image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
              bus: VIRTIO
              cpuHotPlug: true
              ramHotPlug: true
              type: HDD
              availabilityZone: AUTO
              discVirtioHotUnplug: true
              deviceNumber: 3
              imagePassword: mypass123
              size: 100.0
              nicHotPlug: true
              backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
              licenceType: LINUX
              name: My resource
              sshKeys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
        nics:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: collection
          items:
          - entities:
              firewallrules:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: firewall-rule
                  properties:
                    sourceMac: 00:0a:95:9d:68:16
                    targetIp: 22.231.113.64
                    icmpType: 8
                    protocol: TCP
                    sourceIp: 22.231.113.64
                    icmpCode: 0
                    name: My resource
                    portRangeStart: 8
                    portRangeEnd: 8
                - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: firewall-rule
                  properties:
                    sourceMac: 00:0a:95:9d:68:16
                    targetIp: 22.231.113.64
                    icmpType: 8
                    protocol: TCP
                    sourceIp: 22.231.113.64
                    icmpCode: 0
                    name: My resource
                    portRangeStart: 8
                    portRangeEnd: 8
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: nic
            properties:
              nat: true
              name: My resource
              lan: 2
              ips:
              - ips
              - ips
              mac: 00:0a:95:9d:68:16
              dhcp: true
              firewallActive: false
          - entities:
              firewallrules:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: collection
                items:
                - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: firewall-rule
                  properties:
                    sourceMac: 00:0a:95:9d:68:16
                    targetIp: 22.231.113.64
                    icmpType: 8
                    protocol: TCP
                    sourceIp: 22.231.113.64
                    icmpCode: 0
                    name: My resource
                    portRangeStart: 8
                    portRangeEnd: 8
                - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: firewall-rule
                  properties:
                    sourceMac: 00:0a:95:9d:68:16
                    targetIp: 22.231.113.64
                    icmpType: 8
                    protocol: TCP
                    sourceIp: 22.231.113.64
                    icmpCode: 0
                    name: My resource
                    portRangeStart: 8
                    portRangeEnd: 8
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: nic
            properties:
              nat: true
              name: My resource
              lan: 2
              ips:
              - ips
              - ips
              mac: 00:0a:95:9d:68:16
              dhcp: true
              firewallActive: false
    ServerProperties:
      required:
      - cores
      - ram
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        cores:
          type: integer
          description: The total number of cores for the server
          format: int32
          example: 4
        ram:
          type: integer
          description: The amount of memory for the server in MB, e.g. 2048. Size
            must be specified in multiples of 256 MB with a minimum of 256 MB; however,
            if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB.
            If you set the RAM size more than 240GB, then ramHotPlug will be set to
            FALSE and can not be set to TRUE unless RAM size not set to less than
            240GB.
          format: int32
          example: 4096
        availabilityZone:
          type: string
          description: The availability zone in which the server should exist
          example: AUTO
          enum:
          - AUTO
          - ZONE_1
          - ZONE_2
        vmState:
          type: string
          description: Status of the virtual Machine
          readOnly: true
          example: RUNNING
          enum:
          - NOSTATE
          - RUNNING
          - BLOCKED
          - PAUSED
          - SHUTDOWN
          - SHUTOFF
          - CRASHED
        bootCdrom:
          $ref: '#/components/schemas/ResourceReference'
        bootVolume:
          $ref: '#/components/schemas/ResourceReference'
        cpuFamily:
          type: string
          description: Cpu family of pserver
          example: AMD_OPTERON
      example:
        cores: 4
        bootCdrom:
          id: id
          href: <RESOURCE-URI>
          type: resource
        name: My resource
        cpuFamily: AMD_OPTERON
        availabilityZone: AUTO
        vmState: RUNNING
        ram: 4096
    GroupEntities:
      type: object
      properties:
        users:
          $ref: '#/components/schemas/GroupMembers'
        resources:
          $ref: '#/components/schemas/ResourceGroups'
      example:
        users:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
          type: collection
          items:
          - metadata:
              lastLogin: 2015-12-04T14:34:09.809Z
              createdDate: 2015-12-04T14:34:09.809Z
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            entities:
              owns:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  entities:
                    groups:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                      type: collection
                      items:
                      - null
                      - null
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  type: group
                  properties:
                    secAuthProtection: true
                    name: name
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  entities:
                    groups:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                      type: collection
                      items:
                      - null
                      - null
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  type: group
                  properties:
                    secAuthProtection: true
                    name: name
              groups:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                type: groups
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: user
            properties:
              firstname: firstname
              administrator: true
              forceSecAuth: true
              secAuthActive: true
              email: email
              lastname: lastname
              s3CanonicalUserId: s3CanonicalUserId
          - metadata:
              lastLogin: 2015-12-04T14:34:09.809Z
              createdDate: 2015-12-04T14:34:09.809Z
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            entities:
              owns:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                type: collection
                items:
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  entities:
                    groups:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                      type: collection
                      items:
                      - null
                      - null
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  type: group
                  properties:
                    secAuthProtection: true
                    name: name
                - metadata:
                    createdByUserId: user@example.com
                    createdDate: 2015-12-04T14:34:09.809Z
                    createdBy: user@example.com
                    lastModifiedDate: 2015-12-04T14:34:09.809Z
                    lastModifiedBy: user@example.com
                    etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                    state: AVAILABLE
                    lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                  entities:
                    groups:
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                      type: collection
                      items:
                      - null
                      - null
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  type: group
                  properties:
                    secAuthProtection: true
                    name: name
              groups:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                type: groups
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: user
            properties:
              firstname: firstname
              administrator: true
              forceSecAuth: true
              secAuthActive: true
              email: email
              lastname: lastname
              s3CanonicalUserId: s3CanonicalUserId
    S3KeyProperties:
      type: object
      properties:
        secretKey:
          type: string
          description: secret of the s3 key
          readOnly: true
          example: tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG
        active:
          type: boolean
          description: denotes if the s3 key is active or not
      example:
        secretKey: tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG
        active: true
    GroupUsers:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: groups
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Group'
      description: collection of groups a user is member of
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
        type: groups
        items:
        - null
        - null
    Group:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: group
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c
        properties:
          $ref: '#/components/schemas/GroupProperties'
        entities:
          $ref: '#/components/schemas/GroupEntities'
      example:
        entities:
          users:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
            type: collection
            items:
            - metadata:
                lastLogin: 2015-12-04T14:34:09.809Z
                createdDate: 2015-12-04T14:34:09.809Z
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              entities:
                owns:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    entities:
                      groups:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                        type: collection
                        items:
                        - null
                        - null
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    type: group
                    properties:
                      secAuthProtection: true
                      name: name
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    entities:
                      groups:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                        type: collection
                        items:
                        - null
                        - null
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    type: group
                    properties:
                      secAuthProtection: true
                      name: name
                groups:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                  type: groups
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: user
              properties:
                firstname: firstname
                administrator: true
                forceSecAuth: true
                secAuthActive: true
                email: email
                lastname: lastname
                s3CanonicalUserId: s3CanonicalUserId
            - metadata:
                lastLogin: 2015-12-04T14:34:09.809Z
                createdDate: 2015-12-04T14:34:09.809Z
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              entities:
                owns:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                  type: collection
                  items:
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    entities:
                      groups:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                        type: collection
                        items:
                        - null
                        - null
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    type: group
                    properties:
                      secAuthProtection: true
                      name: name
                  - metadata:
                      createdByUserId: user@example.com
                      createdDate: 2015-12-04T14:34:09.809Z
                      createdBy: user@example.com
                      lastModifiedDate: 2015-12-04T14:34:09.809Z
                      lastModifiedBy: user@example.com
                      etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                      state: AVAILABLE
                      lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                    entities:
                      groups:
                        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                        type: collection
                        items:
                        - null
                        - null
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    type: group
                    properties:
                      secAuthProtection: true
                      name: name
                groups:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                  type: groups
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: user
              properties:
                firstname: firstname
                administrator: true
                forceSecAuth: true
                secAuthActive: true
                email: email
                lastname: lastname
                s3CanonicalUserId: s3CanonicalUserId
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type: group
        properties:
          reserveIp: true
          createInternetAccess: true
          createDataCenter: true
          createBackupUnit: true
          createK8sCluster: true
          accessActivityLog: true
          name: My resource
          createSnapshot: true
          s3Privilege: true
          createPcc: true
    S3Key:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: group
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d
        metadata:
          $ref: '#/components/schemas/S3KeyMetadata'
        properties:
          $ref: '#/components/schemas/S3KeyProperties'
      example:
        metadata:
          createdDate: 2015-12-04T14:34:09.809Z
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d
        type: group
        properties:
          secretKey: tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG
          active: true
    Groups:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: groups
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Group'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups
        type: groups
        items:
        - entities:
            users:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
              type: collection
              items:
              - metadata:
                  lastLogin: 2015-12-04T14:34:09.809Z
                  createdDate: 2015-12-04T14:34:09.809Z
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                entities:
                  owns:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                    type: groups
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: user
                properties:
                  firstname: firstname
                  administrator: true
                  forceSecAuth: true
                  secAuthActive: true
                  email: email
                  lastname: lastname
                  s3CanonicalUserId: s3CanonicalUserId
              - metadata:
                  lastLogin: 2015-12-04T14:34:09.809Z
                  createdDate: 2015-12-04T14:34:09.809Z
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                entities:
                  owns:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                    type: groups
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: user
                properties:
                  firstname: firstname
                  administrator: true
                  forceSecAuth: true
                  secAuthActive: true
                  email: email
                  lastname: lastname
                  s3CanonicalUserId: s3CanonicalUserId
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            reserveIp: true
            createInternetAccess: true
            createDataCenter: true
            createBackupUnit: true
            createK8sCluster: true
            accessActivityLog: true
            name: My resource
            createSnapshot: true
            s3Privilege: true
            createPcc: true
        - entities:
            users:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
              type: collection
              items:
              - metadata:
                  lastLogin: 2015-12-04T14:34:09.809Z
                  createdDate: 2015-12-04T14:34:09.809Z
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                entities:
                  owns:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                    type: groups
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: user
                properties:
                  firstname: firstname
                  administrator: true
                  forceSecAuth: true
                  secAuthActive: true
                  email: email
                  lastname: lastname
                  s3CanonicalUserId: s3CanonicalUserId
              - metadata:
                  lastLogin: 2015-12-04T14:34:09.809Z
                  createdDate: 2015-12-04T14:34:09.809Z
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                entities:
                  owns:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
                    type: collection
                    items:
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                    - metadata:
                        createdByUserId: user@example.com
                        createdDate: 2015-12-04T14:34:09.809Z
                        createdBy: user@example.com
                        lastModifiedDate: 2015-12-04T14:34:09.809Z
                        lastModifiedBy: user@example.com
                        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                        state: AVAILABLE
                        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                      entities:
                        groups:
                          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                          type: collection
                          items:
                          - null
                          - null
                      id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      type: group
                      properties:
                        secAuthProtection: true
                        name: name
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
                    type: groups
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: user
                properties:
                  firstname: firstname
                  administrator: true
                  forceSecAuth: true
                  secAuthActive: true
                  email: email
                  lastname: lastname
                  s3CanonicalUserId: s3CanonicalUserId
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            reserveIp: true
            createInternetAccess: true
            createDataCenter: true
            createBackupUnit: true
            createK8sCluster: true
            accessActivityLog: true
            name: My resource
            createSnapshot: true
            s3Privilege: true
            createPcc: true
    ResourceEntities:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/ResourceGroups'
      example:
        groups:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
          type: collection
          items:
          - null
          - null
    ResourceGroups:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource'
      description: Resources assigned to this group.
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
        type: collection
        items:
        - null
        - null
    Resource:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: group
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/ResourceProperties'
        entities:
          $ref: '#/components/schemas/ResourceEntities'
      description: datacenter resource representation
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        entities:
          groups:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
            type: collection
            items:
            - null
            - null
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type: group
        properties:
          secAuthProtection: true
          name: name
    ResourcesUsers:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource'
      description: Resources owned by a user.
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            secAuthProtection: true
            name: name
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            secAuthProtection: true
            name: name
    UserMetadata:
      type: object
      properties:
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate:
          type: string
          description: time of creation of the user
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        lastLogin:
          type: string
          description: time of last login by the user
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
      example:
        lastLogin: 2015-12-04T14:34:09.809Z
        createdDate: 2015-12-04T14:34:09.809Z
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
    ResourceProperties:
      type: object
      properties:
        name:
          type: string
          description: name of the resource
        secAuthProtection:
          type: boolean
          description: Boolean value representing if the resource is multi factor
            protected or not e.g. using two factor protection. Currently only Data
            Centers and Snapshots are allowed to be multi factor protected, The value
            of attribute if null is intentional and it means that the resource doesn't
            support multi factor protection at all.
          example: true
      example:
        secAuthProtection: true
        name: name
    UserProperties:
      type: object
      properties:
        firstname:
          type: string
          description: first name of the user
        lastname:
          type: string
          description: last name of the user
        email:
          type: string
          description: email address of the user
        administrator:
          type: boolean
          description: indicates if the user has admin rights or not
        forceSecAuth:
          type: boolean
          description: indicates if secure authentication should be forced on the
            user or not
        secAuthActive:
          type: boolean
          description: indicates if secure authentication is active for the user or
            not
        s3CanonicalUserId:
          type: string
          description: Canonical (S3) id of the user for a given identity
      example:
        firstname: firstname
        administrator: true
        forceSecAuth: true
        secAuthActive: true
        email: email
        lastname: lastname
        s3CanonicalUserId: s3CanonicalUserId
    User:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: user
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/UserMetadata'
        properties:
          $ref: '#/components/schemas/UserProperties'
        entities:
          $ref: '#/components/schemas/UsersEntities'
      example:
        metadata:
          lastLogin: 2015-12-04T14:34:09.809Z
          createdDate: 2015-12-04T14:34:09.809Z
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        entities:
          owns:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
            type: collection
            items:
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              entities:
                groups:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                  type: collection
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
              type: group
              properties:
                secAuthProtection: true
                name: name
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              entities:
                groups:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                  type: collection
                  items:
                  - null
                  - null
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
              type: group
              properties:
                secAuthProtection: true
                name: name
          groups:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
            type: groups
            items:
            - null
            - null
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: user
        properties:
          firstname: firstname
          administrator: true
          forceSecAuth: true
          secAuthActive: true
          email: email
          lastname: lastname
          s3CanonicalUserId: s3CanonicalUserId
    UsersEntities:
      type: object
      properties:
        owns:
          $ref: '#/components/schemas/ResourcesUsers'
        groups:
          $ref: '#/components/schemas/GroupUsers'
      example:
        owns:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
          type: collection
          items:
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            entities:
              groups:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                type: collection
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
            type: group
            properties:
              secAuthProtection: true
              name: name
          - metadata:
              createdByUserId: user@example.com
              createdDate: 2015-12-04T14:34:09.809Z
              createdBy: user@example.com
              lastModifiedDate: 2015-12-04T14:34:09.809Z
              lastModifiedBy: user@example.com
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              state: AVAILABLE
              lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
            entities:
              groups:
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                type: collection
                items:
                - null
                - null
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
            type: group
            properties:
              secAuthProtection: true
              name: name
        groups:
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
          type: groups
          items:
          - null
          - null
    GroupMembers:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/User'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users
        type: collection
        items:
        - metadata:
            lastLogin: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          entities:
            owns:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
              type: groups
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: user
          properties:
            firstname: firstname
            administrator: true
            forceSecAuth: true
            secAuthActive: true
            email: email
            lastname: lastname
            s3CanonicalUserId: s3CanonicalUserId
        - metadata:
            lastLogin: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          entities:
            owns:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
              type: groups
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: user
          properties:
            firstname: firstname
            administrator: true
            forceSecAuth: true
            secAuthActive: true
            email: email
            lastname: lastname
            s3CanonicalUserId: s3CanonicalUserId
    GroupProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        createDataCenter:
          type: boolean
          description: create data center privilege
        createSnapshot:
          type: boolean
          description: create snapshot privilege
        reserveIp:
          type: boolean
          description: reserve ip block privilege
        accessActivityLog:
          type: boolean
          description: activity log access privilege
        createPcc:
          type: boolean
          description: create pcc privilege
        s3Privilege:
          type: boolean
          description: S3 privilege
        createBackupUnit:
          type: boolean
          description: create backup unit privilege
        createInternetAccess:
          type: boolean
          description: create internet access privilege
        createK8sCluster:
          type: boolean
          description: create kubernetes cluster privilege
      example:
        reserveIp: true
        createInternetAccess: true
        createDataCenter: true
        createBackupUnit: true
        createK8sCluster: true
        accessActivityLog: true
        name: My resource
        createSnapshot: true
        s3Privilege: true
        createPcc: true
    GroupShare:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: resource as generic type
          example: resource
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b
        properties:
          $ref: '#/components/schemas/GroupShareProperties'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b
        type: resource
        properties:
          editPrivilege: true
          sharePrivilege: true
    GroupShareProperties:
      type: object
      properties:
        editPrivilege:
          type: boolean
          description: edit privilege on a resource
        sharePrivilege:
          type: boolean
          description: share privilege on a resource
      example:
        editPrivilege: true
        sharePrivilege: true
    GroupShares:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: Share representing groups and resource relationship
          example: shares
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/GroupShare'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares
        type: shares
        items:
        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b
          type: resource
          properties:
            editPrivilege: true
            sharePrivilege: true
        - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b
          type: resource
          properties:
            editPrivilege: true
            sharePrivilege: true
    Images:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Image'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: image
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            public: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
            imageType: HDD
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: image
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            public: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
            imageType: HDD
    IpBlock:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: ipblock
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/IpBlockProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: ipblock
        properties:
          size: 5
          name: My resource
          location: us/las
          ips: '["22.231.113.64", "22.231.113.65", "22.231.113.66"]'
          ipConsumers: '{ "ipConsumers": [ { "ip" : "192.18.2.11", "mac" : "02:01:3f:52:6e:57",
            "nicId" : "0e8ee463-1174-46f2-87ba-a5c79c14d8e5", "serverId" : "e6a3466f-8d6e-4cb6-8001-f4e245f222b7",
            "serverName" : "Unnamed Server", "datacenterId" : "6e54a9ec-aace-4176-8ee4-1c3a704fccfc",
            "datacenterName" : "IpConsumerDC"} ] }'
    IpBlockProperties:
      required:
      - location
      - size
      type: object
      properties:
        ips:
          type: array
          description: A collection of IPs associated with the IP Block
          readOnly: true
          example: '["22.231.113.64", "22.231.113.65", "22.231.113.66"]'
          items:
            type: string
        location:
          type: string
          description: Location of that IP Block. Property cannot be modified after
            creation (disallowed in update requests)
          example: us/las
        size:
          type: integer
          description: The size of the IP block
          format: int32
          example: 5
        name:
          type: string
          description: A name of that resource
          example: My resource
        ipConsumers:
          type: array
          description: Read-Only attribute. Lists consumption detail of an individual
            ip
          readOnly: true
          example: '{ "ipConsumers": [ { "ip" : "192.18.2.11", "mac" : "02:01:3f:52:6e:57",
            "nicId" : "0e8ee463-1174-46f2-87ba-a5c79c14d8e5", "serverId" : "e6a3466f-8d6e-4cb6-8001-f4e245f222b7",
            "serverName" : "Unnamed Server", "datacenterId" : "6e54a9ec-aace-4176-8ee4-1c3a704fccfc",
            "datacenterName" : "IpConsumerDC"} ] }'
          items:
            $ref: '#/components/schemas/IpConsumer'
      example:
        size: 5
        name: My resource
        location: us/las
        ips: '["22.231.113.64", "22.231.113.65", "22.231.113.66"]'
        ipConsumers: '{ "ipConsumers": [ { "ip" : "192.18.2.11", "mac" : "02:01:3f:52:6e:57",
          "nicId" : "0e8ee463-1174-46f2-87ba-a5c79c14d8e5", "serverId" : "e6a3466f-8d6e-4cb6-8001-f4e245f222b7",
          "serverName" : "Unnamed Server", "datacenterId" : "6e54a9ec-aace-4176-8ee4-1c3a704fccfc",
          "datacenterName" : "IpConsumerDC"} ] }'
    IpBlocks:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/IpBlock'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: ipblock
          properties:
            size: 5
            name: My resource
            location: us/las
            ips: '["22.231.113.64", "22.231.113.65", "22.231.113.66"]'
            ipConsumers: '{ "ipConsumers": [ { "ip" : "192.18.2.11", "mac" : "02:01:3f:52:6e:57",
              "nicId" : "0e8ee463-1174-46f2-87ba-a5c79c14d8e5", "serverId" : "e6a3466f-8d6e-4cb6-8001-f4e245f222b7",
              "serverName" : "Unnamed Server", "datacenterId" : "6e54a9ec-aace-4176-8ee4-1c3a704fccfc",
              "datacenterName" : "IpConsumerDC"} ] }'
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: ipblock
          properties:
            size: 5
            name: My resource
            location: us/las
            ips: '["22.231.113.64", "22.231.113.65", "22.231.113.66"]'
            ipConsumers: '{ "ipConsumers": [ { "ip" : "192.18.2.11", "mac" : "02:01:3f:52:6e:57",
              "nicId" : "0e8ee463-1174-46f2-87ba-a5c79c14d8e5", "serverId" : "e6a3466f-8d6e-4cb6-8001-f4e245f222b7",
              "serverName" : "Unnamed Server", "datacenterId" : "6e54a9ec-aace-4176-8ee4-1c3a704fccfc",
              "datacenterName" : "IpConsumerDC"} ] }'
    LanPropertiesPost:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        public:
          type: boolean
          description: Does this LAN faces the public Internet or not
          example: true
      example:
        public: true
        name: My resource
    LocationProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        features:
          type: array
          description: List of features supported by the location
          readOnly: true
          example: '[SSD]'
          items:
            type: string
            enum:
            - SSD
            - SSD_STORAGE_ZONING
        imageAliases:
          type: array
          description: List of image aliases available for the location
          readOnly: true
          items:
            type: string
      example:
        features: '[SSD]'
        imageAliases:
        - imageAliases
        - imageAliases
        name: My resource
    Location:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: location
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/LocationProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: location
        properties:
          features: '[SSD]'
          imageAliases:
          - imageAliases
          - imageAliases
          name: My resource
    Locations:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Location'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: location
          properties:
            features: '[SSD]'
            imageAliases:
            - imageAliases
            - imageAliases
            name: My resource
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: location
          properties:
            features: '[SSD]'
            imageAliases:
            - imageAliases
            - imageAliases
            name: My resource
    ConnectableDatacenter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
    Peer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        datacenterId:
          type: string
        datacenterName:
          type: string
        location:
          type: string
    IpConsumer:
      type: object
      properties:
        ip:
          type: string
        mac:
          type: string
        nicId:
          type: string
        serverId:
          type: string
        serverName:
          type: string
        datacenterId:
          type: string
        datacenterName:
          type: string
    PrivateCrossConnectProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        description:
          type: string
          description: Human readable description
          example: 'Private Cross-Connect between datacenter ''A'' and datacenter
            ''B'' '
        peers:
          type: array
          description: Read-Only attribute. Lists LAN's joined to this private cross
            connect
          readOnly: true
          example: '{ "peers": [ { "id": "<lan-id>", "name": "<lan-name>", "datacenterId":
            "<dc-uuid>",  "datacenterName": "<dc-name>", "location": "<de/fra>"} ]
            }'
          items:
            $ref: '#/components/schemas/Peer'
        connectableDatacenters:
          type: array
          description: Read-Only attribute. Lists datacenters that can be joined to
            this private cross connect
          readOnly: true
          example: '{ "connectableDatacenters": [ { "id": "<dc-id>", "name": "<dc-name>",
            "location": "<de/fra>"} ] }'
          items:
            $ref: '#/components/schemas/ConnectableDatacenter'
      example:
        connectableDatacenters: '{ "connectableDatacenters": [ { "id": "<dc-id>",
          "name": "<dc-name>", "location": "<de/fra>"} ] }'
        name: My resource
        peers: '{ "peers": [ { "id": "<lan-id>", "name": "<lan-name>", "datacenterId":
          "<dc-uuid>",  "datacenterName": "<dc-name>", "location": "<de/fra>"} ] }'
        description: 'Private Cross-Connect between datacenter ''A'' and datacenter
          ''B'' '
    PrivateCrossConnect:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: pcc
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/PrivateCrossConnectProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: pcc
        properties:
          connectableDatacenters: '{ "connectableDatacenters": [ { "id": "<dc-id>",
            "name": "<dc-name>", "location": "<de/fra>"} ] }'
          name: My resource
          peers: '{ "peers": [ { "id": "<lan-id>", "name": "<lan-name>", "datacenterId":
            "<dc-uuid>",  "datacenterName": "<dc-name>", "location": "<de/fra>"} ]
            }'
          description: 'Private Cross-Connect between datacenter ''A'' and datacenter
            ''B'' '
    PrivateCrossConnects:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/PrivateCrossConnect'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: pcc
          properties:
            connectableDatacenters: '{ "connectableDatacenters": [ { "id": "<dc-id>",
              "name": "<dc-name>", "location": "<de/fra>"} ] }'
            name: My resource
            peers: '{ "peers": [ { "id": "<lan-id>", "name": "<lan-name>", "datacenterId":
              "<dc-uuid>",  "datacenterName": "<dc-name>", "location": "<de/fra>"}
              ] }'
            description: 'Private Cross-Connect between datacenter ''A'' and datacenter
              ''B'' '
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: pcc
          properties:
            connectableDatacenters: '{ "connectableDatacenters": [ { "id": "<dc-id>",
              "name": "<dc-name>", "location": "<de/fra>"} ] }'
            name: My resource
            peers: '{ "peers": [ { "id": "<lan-id>", "name": "<lan-name>", "datacenterId":
              "<dc-uuid>",  "datacenterName": "<dc-name>", "location": "<de/fra>"}
              ] }'
            description: 'Private Cross-Connect between datacenter ''A'' and datacenter
              ''B'' '
    RequestStatus:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: request-status
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/RequestStatusMetadata'
      example:
        metadata:
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          message: message
          targets:
          - target:
              id: id
              href: <RESOURCE-URI>
              type: resource
            status: QUEUED
          - target:
              id: id
              href: <RESOURCE-URI>
              type: resource
            status: QUEUED
          status: QUEUED
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: request-status
    RequestStatusMetadata:
      type: object
      properties:
        status:
          type: string
          enum:
          - QUEUED
          - RUNNING
          - DONE
          - FAILED
        message:
          type: string
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        targets:
          type: array
          items:
            $ref: '#/components/schemas/RequestTarget'
      example:
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        message: message
        targets:
        - target:
            id: id
            href: <RESOURCE-URI>
            type: resource
          status: QUEUED
        - target:
            id: id
            href: <RESOURCE-URI>
            type: resource
          status: QUEUED
        status: QUEUED
    RequestTarget:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/ResourceReference'
        status:
          type: string
          enum:
          - QUEUED
          - RUNNING
          - DONE
          - FAILED
      example:
        target:
          id: id
          href: <RESOURCE-URI>
          type: resource
        status: QUEUED
    Request:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: request
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/RequestMetadata'
        properties:
          $ref: '#/components/schemas/RequestProperties'
      example:
        metadata:
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          requestStatus:
            metadata:
              etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
              message: message
              targets:
              - target:
                  id: id
                  href: <RESOURCE-URI>
                  type: resource
                status: QUEUED
              - target:
                  id: id
                  href: <RESOURCE-URI>
                  type: resource
                status: QUEUED
              status: QUEUED
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: request-status
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: request
        properties:
          headers:
            key: headers
          method: method
          body: body
          url: url
    RequestMetadata:
      type: object
      properties:
        createdDate:
          type: string
          description: The last time the resource was created
          format: date-time
          readOnly: true
          example: 2015-12-04T14:34:09.809Z
        createdBy:
          type: string
          description: The user who created the resource.
          readOnly: true
          example: user@example.com
        etag:
          type: string
          description: 'Resource''s Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11
            . Entity Tag is also added as an ''ETag response header to requests which
            don''t use ''depth'' parameter. '
          readOnly: true
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
      example:
        createdDate: 2015-12-04T14:34:09.809Z
        createdBy: user@example.com
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        requestStatus:
          metadata:
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            message: message
            targets:
            - target:
                id: id
                href: <RESOURCE-URI>
                type: resource
              status: QUEUED
            - target:
                id: id
                href: <RESOURCE-URI>
                type: resource
              status: QUEUED
            status: QUEUED
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: request-status
    RequestProperties:
      type: object
      properties:
        method:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
        body:
          type: string
        url:
          type: string
      example:
        headers:
          key: headers
        method: method
        body: body
        url: url
    Requests:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: requests
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Request'
      example:
        id: requests
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            requestStatus:
              metadata:
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                message: message
                targets:
                - target:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  status: QUEUED
                - target:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  status: QUEUED
                status: QUEUED
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: request-status
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: request
          properties:
            headers:
              key: headers
            method: method
            body: body
            url: url
        - metadata:
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            requestStatus:
              metadata:
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                message: message
                targets:
                - target:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  status: QUEUED
                - target:
                    id: id
                    href: <RESOURCE-URI>
                    type: resource
                  status: QUEUED
                status: QUEUED
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: request-status
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: request
          properties:
            headers:
              key: headers
            method: method
            body: body
            url: url
    Resources:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/resources
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Resource'
      description: Collection to represent the resource
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/resources
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            secAuthProtection: true
            name: name
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
              type: collection
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
          type: group
          properties:
            secAuthProtection: true
            name: name
    Info:
      type: object
      properties:
        href:
          type: string
          description: API entry point
          format: uri
          readOnly: true
        name:
          type: string
          description: Name of the API
          readOnly: true
          example: CLOUD API
        version:
          type: string
          description: Version of the API
          readOnly: true
          example: "1.0"
      example:
        name: CLOUD API
        href: http://example.com/aeiou
        version: "1.0"
    Server:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: server
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/ServerProperties'
        entities:
          $ref: '#/components/schemas/ServerEntities'
      example:
        entities:
          cdroms:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: image
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                cpuHotPlug: true
                ramHotPlug: true
                discScsiHotUnplug: true
                description: 'Image/Snapshot of Ubuntu '
                discVirtioHotUnplug: true
                size: 100.0
                nicHotPlug: true
                public: true
                discScsiHotPlug: true
                licenceType: LINUX
                name: My resource
                cpuHotUnplug: true
                location: us/las
                ramHotUnplug: true
                imageType: HDD
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: image
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                cpuHotPlug: true
                ramHotPlug: true
                discScsiHotUnplug: true
                description: 'Image/Snapshot of Ubuntu '
                discVirtioHotUnplug: true
                size: 100.0
                nicHotPlug: true
                public: true
                discScsiHotPlug: true
                licenceType: LINUX
                name: My resource
                cpuHotUnplug: true
                location: us/las
                ramHotUnplug: true
                imageType: HDD
          volumes:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: volume
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                bus: VIRTIO
                cpuHotPlug: true
                ramHotPlug: true
                type: HDD
                availabilityZone: AUTO
                discVirtioHotUnplug: true
                deviceNumber: 3
                imagePassword: mypass123
                size: 100.0
                nicHotPlug: true
                backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                licenceType: LINUX
                name: My resource
                sshKeys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            - metadata:
                createdByUserId: user@example.com
                createdDate: 2015-12-04T14:34:09.809Z
                createdBy: user@example.com
                lastModifiedDate: 2015-12-04T14:34:09.809Z
                lastModifiedBy: user@example.com
                etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                state: AVAILABLE
                lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: volume
              properties:
                nicHotUnplug: true
                discVirtioHotPlug: true
                image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                bus: VIRTIO
                cpuHotPlug: true
                ramHotPlug: true
                type: HDD
                availabilityZone: AUTO
                discVirtioHotUnplug: true
                deviceNumber: 3
                imagePassword: mypass123
                size: 100.0
                nicHotPlug: true
                backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                licenceType: LINUX
                name: My resource
                sshKeys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
          nics:
            id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
            href: <RESOURCE-URI>
            type: collection
            items:
            - entities:
                firewallrules:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: firewall-rule
                    properties:
                      sourceMac: 00:0a:95:9d:68:16
                      targetIp: 22.231.113.64
                      icmpType: 8
                      protocol: TCP
                      sourceIp: 22.231.113.64
                      icmpCode: 0
                      name: My resource
                      portRangeStart: 8
                      portRangeEnd: 8
                  - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: firewall-rule
                    properties:
                      sourceMac: 00:0a:95:9d:68:16
                      targetIp: 22.231.113.64
                      icmpType: 8
                      protocol: TCP
                      sourceIp: 22.231.113.64
                      icmpCode: 0
                      name: My resource
                      portRangeStart: 8
                      portRangeEnd: 8
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: nic
              properties:
                nat: true
                name: My resource
                lan: 2
                ips:
                - ips
                - ips
                mac: 00:0a:95:9d:68:16
                dhcp: true
                firewallActive: false
            - entities:
                firewallrules:
                  id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                  href: <RESOURCE-URI>
                  type: collection
                  items:
                  - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: firewall-rule
                    properties:
                      sourceMac: 00:0a:95:9d:68:16
                      targetIp: 22.231.113.64
                      icmpType: 8
                      protocol: TCP
                      sourceIp: 22.231.113.64
                      icmpCode: 0
                      name: My resource
                      portRangeStart: 8
                      portRangeEnd: 8
                  - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: firewall-rule
                    properties:
                      sourceMac: 00:0a:95:9d:68:16
                      targetIp: 22.231.113.64
                      icmpType: 8
                      protocol: TCP
                      sourceIp: 22.231.113.64
                      icmpCode: 0
                      name: My resource
                      portRangeStart: 8
                      portRangeEnd: 8
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: nic
              properties:
                nat: true
                name: My resource
                lan: 2
                ips:
                - ips
                - ips
                mac: 00:0a:95:9d:68:16
                dhcp: true
                firewallActive: false
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: server
        properties:
          cores: 4
          bootCdrom:
            id: id
            href: <RESOURCE-URI>
            type: resource
          name: My resource
          cpuFamily: AMD_OPTERON
          availabilityZone: AUTO
          vmState: RUNNING
          ram: 4096
    Servers:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Server'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - entities:
            cdroms:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: image
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  cpuHotPlug: true
                  ramHotPlug: true
                  discScsiHotUnplug: true
                  description: 'Image/Snapshot of Ubuntu '
                  discVirtioHotUnplug: true
                  size: 100.0
                  nicHotPlug: true
                  public: true
                  discScsiHotPlug: true
                  licenceType: LINUX
                  name: My resource
                  cpuHotUnplug: true
                  location: us/las
                  ramHotUnplug: true
                  imageType: HDD
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: image
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  cpuHotPlug: true
                  ramHotPlug: true
                  discScsiHotUnplug: true
                  description: 'Image/Snapshot of Ubuntu '
                  discVirtioHotUnplug: true
                  size: 100.0
                  nicHotPlug: true
                  public: true
                  discScsiHotPlug: true
                  licenceType: LINUX
                  name: My resource
                  cpuHotUnplug: true
                  location: us/las
                  ramHotUnplug: true
                  imageType: HDD
            volumes:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            nics:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  firewallrules:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: nic
                properties:
                  nat: true
                  name: My resource
                  lan: 2
                  ips:
                  - ips
                  - ips
                  mac: 00:0a:95:9d:68:16
                  dhcp: true
                  firewallActive: false
              - entities:
                  firewallrules:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: nic
                properties:
                  nat: true
                  name: My resource
                  lan: 2
                  ips:
                  - ips
                  - ips
                  mac: 00:0a:95:9d:68:16
                  dhcp: true
                  firewallActive: false
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: server
          properties:
            cores: 4
            bootCdrom:
              id: id
              href: <RESOURCE-URI>
              type: resource
            name: My resource
            cpuFamily: AMD_OPTERON
            availabilityZone: AUTO
            vmState: RUNNING
            ram: 4096
        - entities:
            cdroms:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: image
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  cpuHotPlug: true
                  ramHotPlug: true
                  discScsiHotUnplug: true
                  description: 'Image/Snapshot of Ubuntu '
                  discVirtioHotUnplug: true
                  size: 100.0
                  nicHotPlug: true
                  public: true
                  discScsiHotPlug: true
                  licenceType: LINUX
                  name: My resource
                  cpuHotUnplug: true
                  location: us/las
                  ramHotUnplug: true
                  imageType: HDD
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: image
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  cpuHotPlug: true
                  ramHotPlug: true
                  discScsiHotUnplug: true
                  description: 'Image/Snapshot of Ubuntu '
                  discVirtioHotUnplug: true
                  size: 100.0
                  nicHotPlug: true
                  public: true
                  discScsiHotPlug: true
                  licenceType: LINUX
                  name: My resource
                  cpuHotUnplug: true
                  location: us/las
                  ramHotUnplug: true
                  imageType: HDD
            volumes:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: volume
                properties:
                  nicHotUnplug: true
                  discVirtioHotPlug: true
                  image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
                  bus: VIRTIO
                  cpuHotPlug: true
                  ramHotPlug: true
                  type: HDD
                  availabilityZone: AUTO
                  discVirtioHotUnplug: true
                  deviceNumber: 3
                  imagePassword: mypass123
                  size: 100.0
                  nicHotPlug: true
                  backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
                  licenceType: LINUX
                  name: My resource
                  sshKeys:
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
                  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
            nics:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: <RESOURCE-URI>
              type: collection
              items:
              - entities:
                  firewallrules:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: nic
                properties:
                  nat: true
                  name: My resource
                  lan: 2
                  ips:
                  - ips
                  - ips
                  mac: 00:0a:95:9d:68:16
                  dhcp: true
                  firewallActive: false
              - entities:
                  firewallrules:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: <RESOURCE-URI>
                    type: collection
                    items:
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                    - id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                      href: <RESOURCE-URI>
                      type: firewall-rule
                      properties:
                        sourceMac: 00:0a:95:9d:68:16
                        targetIp: 22.231.113.64
                        icmpType: 8
                        protocol: TCP
                        sourceIp: 22.231.113.64
                        icmpCode: 0
                        name: My resource
                        portRangeStart: 8
                        portRangeEnd: 8
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: <RESOURCE-URI>
                type: nic
                properties:
                  nat: true
                  name: My resource
                  lan: 2
                  ips:
                  - ips
                  - ips
                  mac: 00:0a:95:9d:68:16
                  dhcp: true
                  firewallActive: false
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: server
          properties:
            cores: 4
            bootCdrom:
              id: id
              href: <RESOURCE-URI>
              type: resource
            name: My resource
            cpuFamily: AMD_OPTERON
            availabilityZone: AUTO
            vmState: RUNNING
            ram: 4096
    SnapshotProperties:
      type: object
      properties:
        name:
          type: string
          description: A name of that resource
          example: My resource
        description:
          type: string
          description: Human readable description
          example: 'Image/Snapshot of Ubuntu '
        location:
          type: string
          description: 'Location of that image/snapshot. '
          readOnly: true
          example: us/las
        size:
          type: number
          description: The size of the image in GB
          readOnly: true
          example: 100.0
        secAuthProtection:
          type: boolean
          description: Boolean value representing if the snapshot requires extra protection
            e.g. two factor protection
          example: true
        cpuHotPlug:
          type: boolean
          description: Is capable of CPU hot plug (no reboot required)
          example: true
        cpuHotUnplug:
          type: boolean
          description: Is capable of CPU hot unplug (no reboot required)
          example: true
        ramHotPlug:
          type: boolean
          description: Is capable of memory hot plug (no reboot required)
          example: true
        ramHotUnplug:
          type: boolean
          description: Is capable of memory hot unplug (no reboot required)
          example: true
        nicHotPlug:
          type: boolean
          description: Is capable of nic hot plug (no reboot required)
          example: true
        nicHotUnplug:
          type: boolean
          description: Is capable of nic hot unplug (no reboot required)
          example: true
        discVirtioHotPlug:
          type: boolean
          description: Is capable of Virt-IO drive hot plug (no reboot required)
          example: true
        discVirtioHotUnplug:
          type: boolean
          description: Is capable of Virt-IO drive hot unplug (no reboot required).
            This works only for non-Windows virtual Machines.
          example: true
        discScsiHotPlug:
          type: boolean
          description: Is capable of SCSI drive hot plug (no reboot required)
          example: true
        discScsiHotUnplug:
          type: boolean
          description: Is capable of SCSI drive hot unplug (no reboot required). This
            works only for non-Windows virtual Machines.
          example: true
        licenceType:
          type: string
          description: OS type of this Snapshot
          example: LINUX
          enum:
          - UNKNOWN
          - WINDOWS
          - WINDOWS2016
          - LINUX
          - OTHER
      example:
        nicHotUnplug: true
        discVirtioHotPlug: true
        secAuthProtection: true
        cpuHotPlug: true
        ramHotPlug: true
        discScsiHotUnplug: true
        description: 'Image/Snapshot of Ubuntu '
        discVirtioHotUnplug: true
        size: 100.0
        nicHotPlug: true
        discScsiHotPlug: true
        licenceType: LINUX
        name: My resource
        cpuHotUnplug: true
        location: us/las
        ramHotUnplug: true
    Snapshot:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: snapshot
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/SnapshotProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: snapshot
        properties:
          nicHotUnplug: true
          discVirtioHotPlug: true
          secAuthProtection: true
          cpuHotPlug: true
          ramHotPlug: true
          discScsiHotUnplug: true
          description: 'Image/Snapshot of Ubuntu '
          discVirtioHotUnplug: true
          size: 100.0
          nicHotPlug: true
          discScsiHotPlug: true
          licenceType: LINUX
          name: My resource
          cpuHotUnplug: true
          location: us/las
          ramHotUnplug: true
    Snapshots:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Snapshot'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: snapshot
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            secAuthProtection: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: snapshot
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            secAuthProtection: true
            cpuHotPlug: true
            ramHotPlug: true
            discScsiHotUnplug: true
            description: 'Image/Snapshot of Ubuntu '
            discVirtioHotUnplug: true
            size: 100.0
            nicHotPlug: true
            discScsiHotPlug: true
            licenceType: LINUX
            name: My resource
            cpuHotUnplug: true
            location: us/las
            ramHotUnplug: true
    Users:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/User'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            lastLogin: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          entities:
            owns:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
              type: groups
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: user
          properties:
            firstname: firstname
            administrator: true
            forceSecAuth: true
            secAuthActive: true
            email: email
            lastname: lastname
            s3CanonicalUserId: s3CanonicalUserId
        - metadata:
            lastLogin: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          entities:
            owns:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns
              type: collection
              items:
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
              - metadata:
                  createdByUserId: user@example.com
                  createdDate: 2015-12-04T14:34:09.809Z
                  createdBy: user@example.com
                  lastModifiedDate: 2015-12-04T14:34:09.809Z
                  lastModifiedBy: user@example.com
                  etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
                  state: AVAILABLE
                  lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
                entities:
                  groups:
                    id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                    href: https://<API_HOST>/cloudapi/v5/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources
                    type: collection
                    items:
                    - null
                    - null
                id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
                href: https://<API_HOST>/cloudapi/v5/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c
                type: group
                properties:
                  secAuthProtection: true
                  name: name
            groups:
              id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
              href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups
              type: groups
              items:
              - null
              - null
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: user
          properties:
            firstname: firstname
            administrator: true
            forceSecAuth: true
            secAuthActive: true
            email: email
            lastname: lastname
            s3CanonicalUserId: s3CanonicalUserId
    S3Keys:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of the resource
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/s3keys
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/S3Key'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: https://<API_HOST>/cloudapi/v5/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/s3keys
        type: collection
        items:
        - metadata:
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d
          type: group
          properties:
            secretKey: tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG
            active: true
        - metadata:
            createdDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: https://<API_HOST>/cloudapi/v5/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d
          type: group
          properties:
            secretKey: tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG
            active: true
    Volumes:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: object
          description: The type of object that has been created
          example: collection
          allOf:
          - $ref: '#/components/schemas/Type'
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Volume'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: volume
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
            bus: VIRTIO
            cpuHotPlug: true
            ramHotPlug: true
            type: HDD
            availabilityZone: AUTO
            discVirtioHotUnplug: true
            deviceNumber: 3
            imagePassword: mypass123
            size: 100.0
            nicHotPlug: true
            backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
            licenceType: LINUX
            name: My resource
            sshKeys:
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: volume
          properties:
            nicHotUnplug: true
            discVirtioHotPlug: true
            image: d6ad1576-fde9-4696-aa41-1ebd75bdaf49
            bus: VIRTIO
            cpuHotPlug: true
            ramHotPlug: true
            type: HDD
            availabilityZone: AUTO
            discVirtioHotUnplug: true
            deviceNumber: 3
            imagePassword: mypass123
            size: 100.0
            nicHotPlug: true
            backupunitId: 25f67991-0f51-4efc-a8ad-ef1fb31a481c
            licenceType: LINUX
            name: My resource
            sshKeys:
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43
    BackupUnitProperties:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: A name of that resource (only alphanumeric characters are acceptable)
          example: BackupUnitName
        password:
          type: string
          description: the password associated to that resource
          example: mypass123
        email:
          type: string
          description: The email associated with the backup unit. Bear in mind that
            this email does not be the same email as of the user.
          example: email@email.com
      example:
        password: mypass123
        name: BackupUnitName
        email: email@email.com
    BackupUnit:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: string
          description: The type of object that has been created
          readOnly: true
          enum:
          - backupunit
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/BackupUnitProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: backupunit
        properties:
          password: mypass123
          name: BackupUnitName
          email: email@email.com
    BackupUnitSSO:
      type: object
      properties:
        ssoUrl:
          type: string
          description: The backup unit single sign on url
          readOnly: true
          example: https://<hostname>/?jwt=eyJ0eXAiO...W47AN5-_x7E
      example:
        ssoUrl: https://<hostname>/?jwt=eyJ0eXAiO...W47AN5-_x7E
    S3ObjectStorageSSO:
      type: object
      properties:
        ssoUrl:
          type: string
          description: The S3 object storage single sign on url
          readOnly: true
          example: https://<hostname>:port/ssosecurelogin.htm?user=dcf5702f-9353-47AN5-_x7E.....htm
      example:
        ssoUrl: https://<hostname>:port/ssosecurelogin.htm?user=dcf5702f-9353-47AN5-_x7E.....htm
    BackupUnits:
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier
          readOnly: true
          example: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        type:
          type: string
          description: The type of object that has been created
          readOnly: true
          example: collection
          enum:
          - backupunit
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/BackupUnit'
      example:
        id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: backupunit
          properties:
            password: mypass123
            name: BackupUnitName
            email: email@email.com
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 15f67991-0f51-4efc-a8ad-ef1fb31a480c
          href: <RESOURCE-URI>
          type: backupunit
          properties:
            password: mypass123
            name: BackupUnitName
            email: email@email.com
    LabelProperties:
      type: object
      properties:
        key:
          type: string
          description: A Label Key
          example: environment
        value:
          type: string
          description: A Label Value
          example: production
        resourceId:
          type: string
          description: The id of the resource
          example: 700e1cab-99b2-4c30-ba8c-1d273ddba022
        resourceType:
          type: string
          description: The type of the resource on which the label is applied.
          example: datacenter
        resourceHref:
          type: string
          description: URL to the Resource (absolute path) on which the label is applied.
          example: https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022
      example:
        resourceId: 700e1cab-99b2-4c30-ba8c-1d273ddba022
        resourceHref: https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022
        value: production
        key: environment
        resourceType: datacenter
    Label:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: Label is identified using standard URN.
          readOnly: true
          example: urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment
        type:
          type: string
          description: The type of object that has been created
          readOnly: true
          enum:
          - label
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/NoStateMetaData'
        properties:
          $ref: '#/components/schemas/LabelProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment
        href: <RESOURCE-URI>
        type: label
        properties:
          resourceId: 700e1cab-99b2-4c30-ba8c-1d273ddba022
          resourceHref: https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022
          value: production
          key: environment
          resourceType: datacenter
    Labels:
      type: object
      properties:
        id:
          type: string
          description: Unique representation for Label as a collection of resource.
          readOnly: true
          example: labels
        type:
          type: string
          description: The type of resource within a collection
          readOnly: true
          example: collection
          enum:
          - label
        href:
          type: string
          description: URL to the collection representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/Label'
      example:
        id: labels
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment
          href: <RESOURCE-URI>
          type: label
          properties:
            resourceId: 700e1cab-99b2-4c30-ba8c-1d273ddba022
            resourceHref: https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022
            value: production
            key: environment
            resourceType: datacenter
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment
          href: <RESOURCE-URI>
          type: label
          properties:
            resourceId: 700e1cab-99b2-4c30-ba8c-1d273ddba022
            resourceHref: https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022
            value: production
            key: environment
            resourceType: datacenter
    LabelResourceProperties:
      type: object
      properties:
        key:
          type: string
          description: A Label Key
          example: environment
        value:
          type: string
          description: A Label Value
          example: production
      example:
        value: production
        key: environment
    LabelResource:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: Label on a resource is identified using label key.
          readOnly: true
          example: environment
        type:
          type: string
          description: The type of object that has been created
          readOnly: true
          enum:
          - label
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/NoStateMetaData'
        properties:
          $ref: '#/components/schemas/LabelResourceProperties'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: environment
        href: <RESOURCE-URI>
        type: label
        properties:
          value: production
          key: environment
    LabelResources:
      type: object
      properties:
        id:
          type: string
          description: Unique representation for Label as a collection on a resource.
          readOnly: true
          example: labels
        type:
          type: string
          description: The type of resource within a collection
          readOnly: true
          example: collection
          enum:
          - label
        href:
          type: string
          description: URL to the collection representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/LabelResource'
      example:
        id: labels
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: environment
          href: <RESOURCE-URI>
          type: label
          properties:
            value: production
            key: environment
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: environment
          href: <RESOURCE-URI>
          type: label
          properties:
            value: production
            key: environment
    KubernetesClusterProperties:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: A Kubernetes Cluster Name. Valid Kubernetes Cluster name must
            be 63 characters or less and must be empty or begin and end with an alphanumeric
            character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and
            alphanumerics between.
          example: k8s
        k8sVersion:
          type: string
          description: The kubernetes version in which a cluster is running. This
            imposes restrictions on what kubernetes versions can be run in a cluster's
            nodepools. Additionally, not all kubernetes versions are viable upgrade
            targets for all prior versions.
          example: 1.15.4
        maintenanceWindow:
          $ref: '#/components/schemas/KubernetesMaintenanceWindow'
      example:
        maintenanceWindow:
          dayOfTheWeek: Monday
          time: 13:00:00
        name: k8s
        k8sVersion: 1.15.4
    KubernetesCluster:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527
        type:
          type: string
          description: The type of object
          readOnly: true
          enum:
          - k8s
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/KubernetesClusterProperties'
        entities:
          $ref: '#/components/schemas/KubernetesClusterEntities'
      example:
        metadata:
          createdByUserId: user@example.com
          createdDate: 2015-12-04T14:34:09.809Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        entities:
          nodepools:
            id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
            href: <RESOURCE-URI>
            type: collection
            items:
            - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
              href: <RESOURCE-URI>
              type: nodepool
              properties:
                coresCount: 4
                storageSize: 100
                name: k8s-node-pool
                datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                storageType: HDD
                nodeCount: 2
                cpuFamily: AMD_OPTERON
                ramSize: 2048
                availabilityZone: AUTO
                k8sVersion: 1.15.4
            - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
              href: <RESOURCE-URI>
              type: nodepool
              properties:
                coresCount: 4
                storageSize: 100
                name: k8s-node-pool
                datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                storageType: HDD
                nodeCount: 2
                cpuFamily: AMD_OPTERON
                ramSize: 2048
                availabilityZone: AUTO
                k8sVersion: 1.15.4
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527
        href: <RESOURCE-URI>
        type: k8s
        properties:
          maintenanceWindow:
            dayOfTheWeek: Monday
            time: 13:00:00
          name: k8s
          k8sVersion: 1.15.4
    KubernetesClusterEntities:
      type: object
      properties:
        nodepools:
          $ref: '#/components/schemas/KubernetesNodePools'
      example:
        nodepools:
          id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
          href: <RESOURCE-URI>
          type: collection
          items:
          - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
            href: <RESOURCE-URI>
            type: nodepool
            properties:
              coresCount: 4
              storageSize: 100
              name: k8s-node-pool
              datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
              storageType: HDD
              nodeCount: 2
              cpuFamily: AMD_OPTERON
              ramSize: 2048
              availabilityZone: AUTO
              k8sVersion: 1.15.4
          - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
            href: <RESOURCE-URI>
            type: nodepool
            properties:
              coresCount: 4
              storageSize: 100
              name: k8s-node-pool
              datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
              storageType: HDD
              nodeCount: 2
              cpuFamily: AMD_OPTERON
              ramSize: 2048
              availabilityZone: AUTO
              k8sVersion: 1.15.4
    KubernetesClusters:
      type: object
      properties:
        id:
          type: string
          description: Unique representation for Kubernetes Cluster as a collection
            on a resource.
          readOnly: true
          example: k8s
        type:
          type: string
          description: The type of resource within a collection
          readOnly: true
          example: collection
          enum:
          - k8s
        href:
          type: string
          description: URL to the collection representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/KubernetesCluster'
      example:
        id: k8s
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            nodepools:
              id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
              href: <RESOURCE-URI>
              type: collection
              items:
              - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
                href: <RESOURCE-URI>
                type: nodepool
                properties:
                  coresCount: 4
                  storageSize: 100
                  name: k8s-node-pool
                  datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                  storageType: HDD
                  nodeCount: 2
                  cpuFamily: AMD_OPTERON
                  ramSize: 2048
                  availabilityZone: AUTO
                  k8sVersion: 1.15.4
              - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
                href: <RESOURCE-URI>
                type: nodepool
                properties:
                  coresCount: 4
                  storageSize: 100
                  name: k8s-node-pool
                  datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                  storageType: HDD
                  nodeCount: 2
                  cpuFamily: AMD_OPTERON
                  ramSize: 2048
                  availabilityZone: AUTO
                  k8sVersion: 1.15.4
          id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: k8s
          properties:
            maintenanceWindow:
              dayOfTheWeek: Monday
              time: 13:00:00
            name: k8s
            k8sVersion: 1.15.4
        - metadata:
            createdByUserId: user@example.com
            createdDate: 2015-12-04T14:34:09.809Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          entities:
            nodepools:
              id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
              href: <RESOURCE-URI>
              type: collection
              items:
              - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
                href: <RESOURCE-URI>
                type: nodepool
                properties:
                  coresCount: 4
                  storageSize: 100
                  name: k8s-node-pool
                  datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                  storageType: HDD
                  nodeCount: 2
                  cpuFamily: AMD_OPTERON
                  ramSize: 2048
                  availabilityZone: AUTO
                  k8sVersion: 1.15.4
              - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
                href: <RESOURCE-URI>
                type: nodepool
                properties:
                  coresCount: 4
                  storageSize: 100
                  name: k8s-node-pool
                  datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
                  storageType: HDD
                  nodeCount: 2
                  cpuFamily: AMD_OPTERON
                  ramSize: 2048
                  availabilityZone: AUTO
                  k8sVersion: 1.15.4
          id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: k8s
          properties:
            maintenanceWindow:
              dayOfTheWeek: Monday
              time: 13:00:00
            name: k8s
            k8sVersion: 1.15.4
    KubernetesConfigProperties:
      type: object
      properties:
        kubeconfig:
          type: string
          description: A Kubernetes Config file data
          example: <FILE>
      example:
        kubeconfig: <FILE>
    KubernetesMaintenanceWindow:
      type: object
      properties:
        dayOfTheWeek:
          type: string
          description: The day of the week for a maintenance window.
          example: Monday
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
        time:
          type: string
          description: 'The time to use for a maintenance window. Accepted formats
            are: HH:mm:ss; HH:mm:ss"Z"; HH:mm:ssZ. This time may varies by 15 minutes.'
          example: 13:00:00
      example:
        dayOfTheWeek: Monday
        time: 13:00:00
    KubernetesConfig:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527
        type:
          type: string
          description: The type of object
          readOnly: true
          enum:
          - kubeconfig
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        properties:
          $ref: '#/components/schemas/KubernetesConfigProperties'
      example:
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527
        href: <RESOURCE-URI>
        type: kubeconfig
        properties:
          kubeconfig: <FILE>
    KubernetesNodePoolProperties:
      required:
      - availabilityZone
      - coresCount
      - cpuFamily
      - datacenterId
      - name
      - nodeCount
      - ramSize
      - storageSize
      - storageType
      type: object
      properties:
        name:
          type: string
          description: A Kubernetes Node Pool Name. Valid Kubernetes Node Pool name
            must be 63 characters or less and must be empty or begin and end with
            an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
            dots (.), and alphanumerics between.
          example: k8s-node-pool
        datacenterId:
          type: string
          description: A valid uuid of the datacenter on which user has access
          example: 1e072e52-2ed3-492f-b6b6-c6b116907521
        nodeCount:
          type: integer
          description: Number of nodes part of the Node Pool
          example: 2
        cpuFamily:
          type: string
          description: A valid cpu family name
          example: AMD_OPTERON
        coresCount:
          type: integer
          description: Number of cores for node
          example: 4
        ramSize:
          type: integer
          description: RAM size for node, minimum size 2048MB is recommended. Ram
            size must be set to multiple of 1024MB.
          example: 2048
        availabilityZone:
          type: string
          description: The availability zone in which the server should exist
          example: AUTO
          enum:
          - AUTO
          - ZONE_1
          - ZONE_2
        storageType:
          type: string
          description: Hardware type of the volume
          example: HDD
          enum:
          - HDD
          - SSD
        storageSize:
          type: integer
          description: The size of the volume in GB. The size should be greater than
            10GB.
          example: 100
        k8sVersion:
          type: string
          description: The kubernetes version in which a nodepool is running. This
            imposes restrictions on what kubernetes versions can be run in a cluster's
            nodepools. Additionally, not all kubernetes versions are viable upgrade
            targets for all prior versions.
          example: 1.15.4
        maintenanceWindow:
          $ref: '#/components/schemas/KubernetesMaintenanceWindow'
      example:
        coresCount: 4
        storageSize: 100
        name: k8s-node-pool
        datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
        storageType: HDD
        nodeCount: 2
        cpuFamily: AMD_OPTERON
        ramSize: 2048
        availabilityZone: AUTO
        k8sVersion: 1.15.4
    KubernetesNodePool:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527
        type:
          type: string
          description: The type of object
          readOnly: true
          enum:
          - nodepool
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/DatacenterElementMetadata'
        properties:
          $ref: '#/components/schemas/KubernetesNodePoolProperties'
      example:
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527
        href: <RESOURCE-URI>
        type: nodepool
        properties:
          coresCount: 4
          storageSize: 100
          name: k8s-node-pool
          datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
          storageType: HDD
          nodeCount: 2
          cpuFamily: AMD_OPTERON
          ramSize: 2048
          availabilityZone: AUTO
          k8sVersion: 1.15.4
    KubernetesNodePools:
      type: object
      properties:
        id:
          type: string
          description: Unique representation for Kubernetes Node Pool as a collection
            on a resource.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
        type:
          type: string
          description: The type of resource within a collection
          readOnly: true
          example: collection
          enum:
          - nodepool
        href:
          type: string
          description: URL to the collection representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/KubernetesNodePool'
      example:
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
        href: <RESOURCE-URI>
        type: collection
        items:
        - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: nodepool
          properties:
            coresCount: 4
            storageSize: 100
            name: k8s-node-pool
            datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
            storageType: HDD
            nodeCount: 2
            cpuFamily: AMD_OPTERON
            ramSize: 2048
            availabilityZone: AUTO
            k8sVersion: 1.15.4
        - id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: nodepool
          properties:
            coresCount: 4
            storageSize: 100
            name: k8s-node-pool
            datacenterId: 1e072e52-2ed3-492f-b6b6-c6b116907521
            storageType: HDD
            nodeCount: 2
            cpuFamily: AMD_OPTERON
            ramSize: 2048
            availabilityZone: AUTO
            k8sVersion: 1.15.4
    KubernetesNodeProperties:
      required:
      - k8sVersion
      - name
      - publicIP
      type: object
      properties:
        name:
          type: string
          description: A Kubernetes Node Name.
          example: k8s-node
        publicIP:
          type: string
          description: A valid public IP.
          example: 192.168.23.2
        k8sVersion:
          type: string
          description: The kubernetes version in which a nodepool is running. This
            imposes restrictions on what kubernetes versions can be run in a cluster's
            nodepools. Additionally, not all kubernetes versions are viable upgrade
            targets for all prior versions.
          example: 1.15.4
      example:
        name: k8s-node
        publicIP: 192.168.23.2
        k8sVersion: 1.15.4
    KubernetesNode:
      required:
      - properties
      type: object
      properties:
        id:
          type: string
          description: The resource's unique identifier.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527
        type:
          type: string
          description: The type of object
          readOnly: true
          enum:
          - nodepool
        href:
          type: string
          description: URL to the object representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        metadata:
          $ref: '#/components/schemas/KubernetesNodeMetadata'
        properties:
          $ref: '#/components/schemas/KubernetesNodeProperties'
      example:
        metadata:
          lastSoftwareUpdatedDate: 2015-12-04T14:34:09.809Z
          createdDate: 2015-12-04T14:34:09.809Z
          lastModifiedDate: 2015-12-04T14:34:09.809Z
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527
        href: <RESOURCE-URI>
        type: nodepool
        properties:
          name: k8s-node
          publicIP: 192.168.23.2
          k8sVersion: 1.15.4
    KubernetesNodes:
      type: object
      properties:
        id:
          type: string
          description: Unique representation for Kubernetes Node Pool as a collection
            on a resource.
          readOnly: true
          example: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
        type:
          type: string
          description: The type of resource within a collection
          readOnly: true
          example: collection
          enum:
          - nodepool
        href:
          type: string
          description: URL to the collection representation (absolute path)
          format: uri
          readOnly: true
          example: <RESOURCE-URI>
        items:
          type: array
          description: Array of items in that collection
          readOnly: true
          items:
            $ref: '#/components/schemas/KubernetesNode'
      example:
        id: 1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools
        href: <RESOURCE-URI>
        type: collection
        items:
        - metadata:
            lastSoftwareUpdatedDate: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
          id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: nodepool
          properties:
            name: k8s-node
            publicIP: 192.168.23.2
            k8sVersion: 1.15.4
        - metadata:
            lastSoftwareUpdatedDate: 2015-12-04T14:34:09.809Z
            createdDate: 2015-12-04T14:34:09.809Z
            lastModifiedDate: 2015-12-04T14:34:09.809Z
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
          id: 1e072e52-2ed3-492f-b6b6-c6b116907527
          href: <RESOURCE-URI>
          type: nodepool
          properties:
            name: k8s-node
            publicIP: 192.168.23.2
            k8sVersion: 1.15.4
    Error:
      type: object
      properties:
        httpStatus:
          type: integer
          description: HTTP status code of the operation
          format: int32
          readOnly: true
          example: 400
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ErrorMessage:
      type: object
      properties:
        errorCode:
          type: string
          description: Application internal error code
          readOnly: true
          example: "123"
        message:
          type: string
          description: Human readable message
          readOnly: true
          example: Error message example
    Type:
      type: string
      enum:
      - datacenter
      - server
      - volume
      - nic
      - loadbalancer
      - location
      - firewall-rule
      - image
      - snapshot
      - lan
      - ipblock
      - pcc
      - contract
      - user
      - group
      - collection
      - resource
      - request
      - request-status
      - s3key
      - backupunit
      - label
      - k8s
      - nodepool
  responses:
    apiError:
      description: 'Any erroneous status code: 400 (parse error), 401 (auth error),
        402 (trial access), 403 (insufficient permissions), 404 (not found), 405 (unsupported
        HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request
        rate limit exceeded), 500 (server error), 503 (maintenance)'
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    apiErrorK8sVersion:
      description: 'Any erroneous status code: 401 (auth error), 404 (not found),
        405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation
        error), 500 (server error), 503 (maintenance)'
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    depth:
      name: depth
      in: query
      description: "Controls the details depth of response objects. \nEg. GET /datacenters/[ID]\n\
        \t- depth=0: only direct properties are included. Children (servers etc.)\
        \ are not included\n\t- depth=1: direct properties and children references\
        \ are included\n\t- depth=2: direct properties and children properties are\
        \ included\n\t- depth=3: direct properties and children properties and children's\
        \ children are included\n\t- depth=... and so on"
      schema:
        maximum: 10
        minimum: 0
        type: integer
        format: int32
        default: 0
    pretty:
      name: pretty
      in: query
      description: Controls whether response is pretty-printed (with indentation and
        new lines)
      schema:
        type: boolean
        default: true
    contractNumber:
      name: X-Contract-Number
      in: header
      description: Users having more than 1 contract need to provide contract number,
        against which all API requests should be executed
      schema:
        type: integer
        format: int32
  securitySchemes:
    Basic Authentication:
      type: http
      description: 'You will need to base64 encode the string containing your credentials.
        Separate your username and password with a colon, i.e., username:password
        and send it as ''Authorization'' request header. More details: https://en.wikipedia.org/wiki/Basic_access_authentication'
      scheme: basic
    Token Authentication:
      type: apiKey
      description: Please provide header value as 'Bearer <token>' and don't forget
        to add 'Bearer' HTTP Authorization Scheme before the token.
      name: Authorization
      in: header
